{"version":3,"sources":["../node_modules/@ant-design/icons/es/utils.js","../node_modules/@ant-design/icons/es/components/IconBase.js","../node_modules/@ant-design/icons/es/components/twoTonePrimaryColor.js","../node_modules/@ant-design/icons/es/components/AntdIcon.js","../node_modules/rc-util/es/Children/toArray.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"],"names":["isIconDefinition","target","_typeof","name","theme","icon","normalizeAttrs","attrs","arguments","length","undefined","Object","keys","reduce","acc","key","val","className","class","getSecondaryColor","primaryColor","generateColor","normalizeTwoToneColors","twoToneColor","Array","isArray","iconStyles","cssInjectedFlag","twoToneColorPalette","secondaryColor","calculated","IconBase","props","valid","message","onClick","style","restProps","_objectWithoutProperties","colors","styleStr","useEffect","insertCss","prepend","useInsertStyles","concat","warn","_objectSpread","generate","node","rootProps","React","createElement","tag","children","map","child","index","width","height","fill","displayName","getTwoToneColors","setTwoToneColors","_ref","setTwoToneColor","_normalizeTwoToneColo","_normalizeTwoToneColo2","_slicedToArray","ReactIcon","Icon","ref","spin","rotate","tabIndex","classString","classNames","_defineProperty","Boolean","svgClassString","iconTabIndex","svgStyle","msTransform","transform","assign","role","getTwoToneColor","toArray","option","ret","Children","forEach","keepEmpty","isFragment","push","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","apply","err","MapShim","Map","getIndex","arr","result","some","entry","class_1","__entries__","defineProperty","prototype","get","enumerable","configurable","set","delete","entries","splice","has","clear","callback","ctx","_i","_a","call","isBrowser","window","document","global$1","global","Math","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","create","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","WeakMap","ResizeObserver","method"],"mappings":"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","file":"static/js/2.070af6e8.chunk.js","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { generate as generateColor } from '@ant-design/colors';\nimport React, { useEffect } from 'react';\nimport warn from \"rc-util/es/warning\";\nimport { insertCss } from 'insert-css';\nexport function warning(valid, message) {\n  warn(valid, \"[@ant-design/icons] \".concat(message));\n}\nexport function isIconDefinition(target) {\n  return _typeof(target) === 'object' && typeof target.name === 'string' && typeof target.theme === 'string' && (_typeof(target.icon) === 'object' || typeof target.icon === 'function');\n}\nexport function normalizeAttrs() {\n  var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.keys(attrs).reduce(function (acc, key) {\n    var val = attrs[key];\n\n    switch (key) {\n      case 'class':\n        acc.className = val;\n        delete acc.class;\n        break;\n\n      default:\n        acc[key] = val;\n    }\n\n    return acc;\n  }, {});\n}\nexport function generate(node, key, rootProps) {\n  if (!rootProps) {\n    return React.createElement(node.tag, _objectSpread({\n      key: key\n    }, normalizeAttrs(node.attrs)), (node.children || []).map(function (child, index) {\n      return generate(child, \"\".concat(key, \"-\").concat(node.tag, \"-\").concat(index));\n    }));\n  }\n\n  return React.createElement(node.tag, _objectSpread(_objectSpread({\n    key: key\n  }, normalizeAttrs(node.attrs)), rootProps), (node.children || []).map(function (child, index) {\n    return generate(child, \"\".concat(key, \"-\").concat(node.tag, \"-\").concat(index));\n  }));\n}\nexport function getSecondaryColor(primaryColor) {\n  // choose the second color\n  return generateColor(primaryColor)[0];\n}\nexport function normalizeTwoToneColors(twoToneColor) {\n  if (!twoToneColor) {\n    return [];\n  }\n\n  return Array.isArray(twoToneColor) ? twoToneColor : [twoToneColor];\n} // These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n\nexport var svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor',\n  'aria-hidden': 'true',\n  focusable: 'false'\n};\nexport var iconStyles = \"\\n.anticon {\\n  display: inline-block;\\n  color: inherit;\\n  font-style: normal;\\n  line-height: 0;\\n  text-align: center;\\n  text-transform: none;\\n  vertical-align: -0.125em;\\n  text-rendering: optimizeLegibility;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n.anticon > * {\\n  line-height: 1;\\n}\\n\\n.anticon svg {\\n  display: inline-block;\\n}\\n\\n.anticon::before {\\n  display: none;\\n}\\n\\n.anticon .anticon-icon {\\n  display: block;\\n}\\n\\n.anticon[tabindex] {\\n  cursor: pointer;\\n}\\n\\n.anticon-spin::before,\\n.anticon-spin {\\n  display: inline-block;\\n  -webkit-animation: loadingCircle 1s infinite linear;\\n  animation: loadingCircle 1s infinite linear;\\n}\\n\\n@-webkit-keyframes loadingCircle {\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes loadingCircle {\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\";\nvar cssInjectedFlag = false;\nexport var useInsertStyles = function useInsertStyles() {\n  var styleStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iconStyles;\n  useEffect(function () {\n    if (!cssInjectedFlag) {\n      insertCss(styleStr, {\n        prepend: true\n      });\n      cssInjectedFlag = true;\n    }\n  }, []);\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { generate, getSecondaryColor, isIconDefinition, warning, useInsertStyles } from '../utils';\nvar twoToneColorPalette = {\n  primaryColor: '#333',\n  secondaryColor: '#E6E6E6',\n  calculated: false\n};\n\nfunction setTwoToneColors(_ref) {\n  var primaryColor = _ref.primaryColor,\n      secondaryColor = _ref.secondaryColor;\n  twoToneColorPalette.primaryColor = primaryColor;\n  twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  twoToneColorPalette.calculated = !!secondaryColor;\n}\n\nfunction getTwoToneColors() {\n  return _objectSpread({}, twoToneColorPalette);\n}\n\nvar IconBase = function IconBase(props) {\n  var icon = props.icon,\n      className = props.className,\n      onClick = props.onClick,\n      style = props.style,\n      primaryColor = props.primaryColor,\n      secondaryColor = props.secondaryColor,\n      restProps = _objectWithoutProperties(props, [\"icon\", \"className\", \"onClick\", \"style\", \"primaryColor\", \"secondaryColor\"]);\n\n  var colors = twoToneColorPalette;\n\n  if (primaryColor) {\n    colors = {\n      primaryColor: primaryColor,\n      secondaryColor: secondaryColor || getSecondaryColor(primaryColor)\n    };\n  }\n\n  useInsertStyles();\n  warning(isIconDefinition(icon), \"icon should be icon definiton, but got \".concat(icon));\n\n  if (!isIconDefinition(icon)) {\n    return null;\n  }\n\n  var target = icon;\n\n  if (target && typeof target.icon === 'function') {\n    target = _objectSpread(_objectSpread({}, target), {}, {\n      icon: target.icon(colors.primaryColor, colors.secondaryColor)\n    });\n  }\n\n  return generate(target.icon, \"svg-\".concat(target.name), _objectSpread({\n    className: className,\n    onClick: onClick,\n    style: style,\n    'data-icon': target.name,\n    width: '1em',\n    height: '1em',\n    fill: 'currentColor',\n    'aria-hidden': 'true'\n  }, restProps));\n};\n\nIconBase.displayName = 'IconReact';\nIconBase.getTwoToneColors = getTwoToneColors;\nIconBase.setTwoToneColors = setTwoToneColors;\nexport default IconBase;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport ReactIcon from './IconBase';\nimport { normalizeTwoToneColors } from '../utils';\nexport function setTwoToneColor(twoToneColor) {\n  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor),\n      _normalizeTwoToneColo2 = _slicedToArray(_normalizeTwoToneColo, 2),\n      primaryColor = _normalizeTwoToneColo2[0],\n      secondaryColor = _normalizeTwoToneColo2[1];\n\n  return ReactIcon.setTwoToneColors({\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor\n  });\n}\nexport function getTwoToneColor() {\n  var colors = ReactIcon.getTwoToneColors();\n\n  if (!colors.calculated) {\n    return colors.primaryColor;\n  }\n\n  return [colors.primaryColor, colors.secondaryColor];\n}","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport ReactIcon from './IconBase';\nimport { getTwoToneColor, setTwoToneColor } from './twoTonePrimaryColor';\nimport { normalizeTwoToneColors } from '../utils'; // Initial setting\n// should move it to antd main repo?\n\nsetTwoToneColor('#1890ff');\nvar Icon = React.forwardRef(function (props, ref) {\n  var className = props.className,\n      icon = props.icon,\n      spin = props.spin,\n      rotate = props.rotate,\n      tabIndex = props.tabIndex,\n      onClick = props.onClick,\n      twoToneColor = props.twoToneColor,\n      restProps = _objectWithoutProperties(props, [\"className\", \"icon\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"twoToneColor\"]);\n\n  var classString = classNames('anticon', _defineProperty({}, \"anticon-\".concat(icon.name), Boolean(icon.name)), className);\n  var svgClassString = classNames({\n    'anticon-spin': !!spin || icon.name === 'loading'\n  });\n  var iconTabIndex = tabIndex;\n\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n\n  var svgStyle = rotate ? {\n    msTransform: \"rotate(\".concat(rotate, \"deg)\"),\n    transform: \"rotate(\".concat(rotate, \"deg)\")\n  } : undefined;\n\n  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor),\n      _normalizeTwoToneColo2 = _slicedToArray(_normalizeTwoToneColo, 2),\n      primaryColor = _normalizeTwoToneColo2[0],\n      secondaryColor = _normalizeTwoToneColo2[1];\n\n  return React.createElement(\"span\", Object.assign({\n    role: \"img\",\n    \"aria-label\": icon.name\n  }, restProps, {\n    ref: ref,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), React.createElement(ReactIcon, {\n    className: svgClassString,\n    icon: icon,\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor,\n    style: svgStyle\n  }));\n});\nIcon.displayName = 'AntdIcon';\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nexport default Icon;","import React from 'react';\nimport { isFragment } from 'react-is';\nexport default function toArray(children) {\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var ret = [];\n  React.Children.forEach(children, function (child) {\n    if ((child === undefined || child === null) && !option.keepEmpty) {\n      return;\n    }\n\n    if (Array.isArray(child)) {\n      ret = ret.concat(toArray(child));\n    } else if (isFragment(child) && child.props) {\n      ret = ret.concat(toArray(child.props.children, option));\n    } else {\n      ret.push(child);\n    }\n  });\n  return ret;\n}","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n"],"sourceRoot":""}