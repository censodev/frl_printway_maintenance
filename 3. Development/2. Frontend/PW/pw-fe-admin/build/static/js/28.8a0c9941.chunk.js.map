{"version":3,"sources":["views/OrderDetail/OrdersDetail.module.less","components/TimeLine/style.module.less","components/Modal/EditShippingOrder/EditShippingOrder.js","core/util/checkOrderLog.js","components/TimeLine/TimeLine.js","views/OrderDetail/OrderDetail.js","containers/OrderDetail/OrderDetailContainer.js"],"names":["module","exports","layout","labelCol","span","wrapperCol","EditShippingOrder","state","note","handleOk","myRef","click","onFinish","value","props","order","doEditShipping","orderId","id","firstName","lastName","company","address1","address2","city","province","country","postcode","phone","setState","this","visible","handleCancel","editShipping","title","ShoppingCartOutlined","className","cls","green","style","marginRight","onOk","confirmLoading","onCancel","destroyOnClose","initialValues","shippingAddress","billingAddress","Item","name","label","placeholder","rules","required","message","type","htmlType","ref","input","display","React","Component","checkOrderLogs","author","itemSku","data","capitalize","TimeLine","timeLine","timeLineBody","map","item","index","timeLineItem","key","timeLineContent","hourAndMin","Title","Text","OrderDetail","openPrintDesignDrawer","lineItemCurrent","lineItemsWithOrderId","openEditNoteModal","openEditShippingModal","rowsSelected","openModalSetActionRequired","openModalRefund","openModalResend","openModalAssignSupplier","openModalAssignCarrier","openAddTrackingIdModal","onChangeCheckBox","e","lineItem","target","checked","newArr","sku","filter","x","checkStatusOrder","Date","coolingOffExp","status","fetchOneOrder","match","fetchAllCarriesNoPaging","params","preProps","oneOrder","success","lineItems","currency","console","log","nextProps","setActionRequiredSuccess","setActionRequiredError","refundSuccess","refundError","resendSuccess","resendError","assignSupplierSuccess","assignSupplierError","assignCarrierSuccess","assignCarrierError","editShippingSuccess","editShippingError","addTrackingIdSuccess","addTrackingIdError","error","content","saveImageDesign","saveImageDesignSuccess","saveImageDesignError","doSaveImageDesign","setActionRequiredLoading","setActionRequired","refund","refundLoading","resend","resendLoading","assignSupplier","assignSupplierLoading","assignCarrier","assignCarrierLoading","oneUser","history","suppliersAssign","addTrackingIdLoading","addTrackingId","carriersAssign","loading","user","listSuppliersAssign","groupOrderLogs","orderLogs","date","time","toLocaleDateString","toLocaleTimeString","reduce","r","a","ButtonGroup","length","btnGroup","onClick","indeterminate","totalRow","icon","NotificationOutlined","size","isMobile","disabled","checkMoreAction","ModalCheckMoreAction","ImportOutlined","ExportOutlined","ResendModal","bold","gutter","marginBottom","md","xs","breakCrum","goBack","headStyle","color","bodyStyle","paddingBottom","detail","level","orderName","createdDate","toLocaleString","card","children","onChange","checkbox","cardImg","src","getImageUrl","imageId","alt","cardContent","cardTitle","count","numberDesignMissing","cardDescription","cardDescriptionLeft","quantity","parseFloat","baseCost","cardDescriptionRight","supplier","statusNote","button","getAssignSupplier","productTypeId","carrier","trackingNumber","padding","href","trackingUrl","arr","push","marginLeft","reverse","renderTimeline","EditOutlined","FileTextOutlined","description","total","SolutionOutlined","sellerEmail","sellerPlan","ShopOutlined","site","url","virtual","siteType","ContactsOutlined","email","extra","PrintDesign","onClose","SetActionRequiredModal","nestedRowsSelected","AssignSupplier","suppliers","AssignCarrier","listCarriesNoPaging","AddTrackingIdModal","connect","toJS","orders","listSuppliers","carries","dispatch","OrdersActions","body","fetchOneUser","getAllSupplier","CarriesActions","getAssignCarrier"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,OAAS,gBAAgB,GAAK,YAAY,OAAS,gBAAgB,QAAU,iBAAiB,UAAY,mBAAmB,KAAO,cAAc,SAAW,kBAAkB,QAAU,iBAAiB,YAAc,qBAAqB,UAAY,mBAAmB,gBAAkB,yBAAyB,qBAAuB,8BAA8B,oBAAsB,6BAA6B,MAAQ,eAAe,SAAW,kBAAkB,YAAc,qBAAqB,KAAO,gB,oBCA/gBD,EAAOC,QAAU,CAAC,SAAW,kBAAkB,aAAe,sBAAsB,aAAe,sBAAsB,gBAAkB,2B,udCKrIC,G,OAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MAyJTE,E,4MArJXC,MAAQ,CACJC,KAAM,I,EAGVC,SAAW,WACP,EAAKC,MAAMC,S,EAGfC,SAAW,SAAAC,GAAU,IAAD,EACkB,EAAKC,MAA/BC,EADQ,EACRA,OACRC,EAFgB,EACDA,gBACA,CACXC,QAASF,EAAMG,GACfC,UAAWN,EAAMM,UACjBC,SAAUP,EAAMO,SAChBC,QAASR,EAAMQ,QACfC,SAAUT,EAAMS,SAChBC,SAAUV,EAAMU,SAChBC,KAAMX,EAAMW,KACZC,SAAUZ,EAAMY,SAChBC,QAASb,EAAMa,QACfC,SAAUd,EAAMc,SAChBC,MAAOf,EAAMe,QAEjB,EAAKC,SAAS,CAAErB,KAAM,M,uDAGhB,IAAD,SACkDsB,KAAKhB,MAApDiB,EADH,EACGA,QAASC,EADZ,EACYA,aAAcC,EAD1B,EAC0BA,aAAclB,EADxC,EACwCA,MAE7C,OACI,6BACI,uBACImB,MACI,6BACI,kBAACC,EAAA,EAAD,CAAsBC,UAAWC,IAAIC,MAAOC,MAAO,CAAEC,YAAa,SADtE,iBAKJT,QAASA,EACTU,KAAMX,KAAKrB,SACXiC,eAAgBT,EAChBU,SAAUX,EACVY,gBAAc,GAEd,qCACIhC,SAAUkB,KAAKlB,SACfV,OAAO,aACP2C,cAAe,CACX1B,UAAWJ,EAAM+B,iBAAmB/B,EAAM+B,gBAAgB3B,UAC1DC,SAAUL,EAAM+B,iBAAmB/B,EAAM+B,gBAAgB1B,SACzDC,QAASN,EAAM+B,iBAAmB/B,EAAM+B,gBAAgBzB,QACxDC,SAAUP,EAAM+B,iBAAmB/B,EAAM+B,gBAAgBxB,SACzDC,SAAUR,EAAM+B,iBAAmB/B,EAAM+B,gBAAgBvB,SACzDC,KAAMT,EAAM+B,iBAAmB/B,EAAM+B,gBAAgBtB,KACrDC,SAAUV,EAAM+B,iBAAmB/B,EAAM+B,gBAAgBrB,SACzDC,QAASX,EAAM+B,iBAAmB/B,EAAM+B,gBAAgBpB,QACxDC,SAAUZ,EAAM+B,iBAAmB/B,EAAM+B,gBAAgBnB,SACzDC,MAAOb,EAAMgC,gBAAkBhC,EAAMgC,eAAenB,QAEpD1B,GAEJ,sBAAM8C,KAAN,CACIC,KAAK,YACLC,MAAM,cAIN,uBAAOC,YAAY,sBAEvB,sBAAMH,KAAN,CACIC,KAAK,WACLC,MAAM,aAIN,uBAAOC,YAAY,qBAEvB,sBAAMH,KAAN,CACIC,KAAK,UACLC,MAAM,WAGN,uBAAOC,YAAY,mBAEvB,sBAAMH,KAAN,CACIC,KAAK,WACLC,MAAM,aAIN,uBAAOC,YAAY,qBAEvB,sBAAMH,KAAN,CACIC,KAAK,WACLC,MAAM,aAGN,uBAAOC,YAAY,qBAEvB,sBAAMH,KAAN,CACIC,KAAK,OACLC,MAAM,QAIN,uBAAOC,YAAY,gBAEvB,sBAAMH,KAAN,CACIC,KAAK,WACLC,MAAM,YAIN,uBAAOC,YAAY,oBAEvB,sBAAMH,KAAN,CACIC,KAAK,UACLC,MAAM,UACNE,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,0BAGnC,uBAAOH,YAAY,mBAEvB,sBAAMH,KAAN,CACIC,KAAK,WACLC,MAAM,gBAIN,uBAAOC,YAAY,eAEvB,sBAAMH,KAAN,CACIC,KAAK,QACLC,MAAM,SAIN,uBAAOC,YAAY,iBAGvB,uBAAQI,KAAK,UAAUC,SAAS,SAASC,IAAK,SAAAC,GAAK,OAAI,EAAKhD,MAAQgD,GAAOnB,MAAO,CAAEoB,QAAS,SAA7F,iB,GA7IQC,IAAMC,W,iFCiDvBC,EA1DQ,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,OAAQR,EAAyB,EAAzBA,KAAMS,EAAmB,EAAnBA,QAAmB,EAAVC,KAC5C,OAAQV,GACJ,IAAK,gBACD,OAAOW,YAAWX,GACtB,IAAK,cACD,MAAO,wBACX,IAAK,2BACD,MAAM,iCAAN,OAAwCS,EAAO,iBAAaA,EAAb,KAA0B,IAC7E,IAAK,iBACD,MAAM,kBAAN,OAAyBA,EAAO,iBAAaA,EAAb,KAA0B,IAC9D,IAAK,kBACD,MAAM,GAAN,OAAUD,GAAU,GAApB,uCAAqDC,GAAoB,GAAzE,KACJ,IAAK,iBACD,MAAM,GAAN,OAAUD,GAAU,GAApB,sCAAoDC,GAAoB,GAAxE,KACJ,IAAK,uBACD,MAAM,YAAN,OAAmBA,EAAO,oBAAgBA,EAAhB,KAA6B,IAC3D,IAAK,OACD,MAAM,QAAN,OAAeA,EAAO,oBAAgBA,EAAhB,KAA6B,IACvD,IAAK,qBACD,MAAM,sBAAN,OAA6BA,EAAO,oBAAgBA,EAAhB,KAA6B,IACrE,IAAK,aACD,MAAM,cAAN,OAAqBA,EAAO,gBAAYA,EAAZ,KAAyB,IACzD,IAAK,4BACD,MAAM,2BAAN,OAAkCA,EAAO,gBAAYA,EAAZ,KAAyB,IACtE,IAAK,iBACD,MAAM,GAAN,OAAUD,GAAU,GAApB,4CAA0DC,GAAoB,GAA9E,KACJ,IAAK,UACD,MAAM,GAAN,OAAUD,GAAU,GAApB,8BAA4CC,GAAoB,GAAhE,KACJ,IAAK,0BACD,MAAM,GAAN,OAAUD,GAAU,GAApB,8CAA4DC,GAAoB,GAAhF,KACJ,IAAK,gBACD,MAAM,GAAN,OAAUD,GAAU,GAApB,oCAAkDC,GAAoB,GAAtE,KACJ,IAAK,gBACD,MAAM,GAAN,OAAUD,GAAU,GAApB,oCAAkDC,GAAoB,GAAtE,KACJ,IAAK,wBACD,MAAM,GAAN,OAAUD,GAAU,GAApB,4CAA0DC,GAAoB,GAA9E,KACJ,IAAK,0BACD,MAAM,GAAN,OAAUD,GAAU,GAApB,8CAA4DC,GAAoB,GAAhF,KACJ,IAAK,0BACD,MAAM,GAAN,OAAUD,GAAU,GAApB,8CAA4DC,GAAoB,GAAhF,KACJ,IAAK,gBACD,MAAM,SAAN,OAAgBA,EAAhB,mBACJ,IAAK,UACD,MAAM,SAAN,OAAgBA,EAAhB,aACJ,IAAK,mBACD,MAAM,GAAN,OAAUD,GAAU,GAApB,sCAAoDC,GAAoB,GAAxE,KACJ,IAAK,0BACD,MAAM,GAAN,OAAUD,GAAU,GAApB,qCAAmDC,GAAoB,GAAvE,KACJ,IAAK,WACD,MAAM,SAAN,OAAgBA,EAAhB,eACJ,IAAK,gBACD,MAAM,SAAN,OAAgBA,EAAhB,mBACJ,IAAK,WACD,MAAM,SAAN,OAAgBA,EAAhB,cACJ,QACI,OAAO,OCrDEG,E,uKACP,IACEF,EAASnC,KAAKhB,MAAdmD,KACR,OACI,yBAAK7B,UAAWC,IAAI+B,UAChB,yBAAKhC,UAAWC,IAAIgC,eACdJ,GAAQ,IAAIK,KAAI,SAACC,EAAMC,GACrB,OACI,yBAAKpC,UAAWC,IAAIoC,aAAcC,IAAKF,GACnC,yBAAKpC,UAAWC,IAAIsC,iBAChB,uBAAGvC,UAAU,SAAS0B,EAAeS,IACrC,uBAAGnC,UAAU,QAAQmC,EAAKK,uB,GAXxBf,a,UC0B9BgB,G,IAAAA,MAAOC,G,IAAAA,KACTJ,GAAM,SAESK,G,4MACjBxE,MAAQ,CACJyE,uBAAuB,EACvBC,gBAAiB,GACjBC,qBAAsB,GACtBC,mBAAmB,EACnBC,uBAAuB,EACvBC,aAAc,GACdC,4BAA4B,EAC5BC,iBAAiB,EACjBC,iBAAiB,EACjBC,yBAAyB,EACzBC,wBAAwB,EACxBC,wBAAwB,G,EAuH5BC,iBAAmB,SAAAC,GAAM,IACbR,EAAiB,EAAK9E,MAAtB8E,aACFS,EAAWD,EAAEE,OAAOlF,MAC1B,GAAIgF,EAAEE,OAAOC,QAAS,CAClB,IAAMC,EAAM,sBAAOZ,GAAP,CAAqBS,IACjC,EAAKjE,SAAS,CAAEwD,aAAcY,IAC9B,EAAKpE,SAAS,CACVqD,qBAAsB,EAAK3E,MAAM2E,qBAAqBZ,KAAI,SAAAC,GACtD,OAAIA,EAAK2B,MAAQJ,EAASI,IAAY,2BAAK3B,GAAZ,IAAkByB,SAAS,IACnDzB,WAId,CACD,IAAM0B,EAASZ,EAAac,QAAO,SAAAC,GAAC,OAAIA,EAAElF,KAAO4E,EAAS5E,MAC1D,EAAKW,SAAS,CAAEwD,aAAcY,IAC9B,EAAKpE,SAAS,CACVqD,qBAAsB,EAAK3E,MAAM2E,qBAAqBZ,KAAI,SAAAC,GACtD,OAAIA,EAAK2B,MAAQJ,EAASI,IAAY,2BAAK3B,GAAZ,IAAkByB,SAAS,IACnDzB,S,EAKvB8B,iBAAmB,SAAAtF,GAEf,OADa,IAAIuF,KACN,IAAIA,KAAKvF,EAAMwF,eACf,cAEJrC,YAAWnD,EAAMyF,S,kEAlJP,IAAD,EAC0C1E,KAAKhB,MAAvD2F,EADQ,EACRA,cAAeC,EADP,EACOA,MAAOC,EADd,EACcA,wBAE9BF,EAAcC,EAAME,OAAO1F,IAC3ByF,M,yCAEeE,GAAW,IAAD,OACjBC,EAAahF,KAAKhB,MAAlBgG,SACA/F,EAAmB+F,EAAnB/F,MAAOgG,EAAYD,EAAZC,QAEXA,GAAWF,EAASC,SAASC,UAAYA,GACzCjF,KAAKD,SAAS,CACVqD,sBAAuBnE,EAAMiG,WAAa,IAAI1C,KAAI,SAAAC,GAAI,kCAC/CA,GAD+C,IACzCtD,QAASF,EAAMG,GAAI+F,SAAUlG,EAAMkG,SAAUjB,SAAS,SAEpE,kBAAMkB,QAAQC,IAAI,EAAK5G,MAAM2E,2B,uDAKPkC,GAAY,IAAD,SAiBpCtF,KAAKhB,MAfLuG,EAFoC,EAEpCA,yBACAC,EAHoC,EAGpCA,uBACAC,EAJoC,EAIpCA,cACAC,EALoC,EAKpCA,YACAC,EANoC,EAMpCA,cACAC,EAPoC,EAOpCA,YACAC,EARoC,EAQpCA,sBACAC,EAToC,EASpCA,oBACAC,EAVoC,EAUpCA,qBACAC,EAXoC,EAWpCA,mBACApB,EAZoC,EAYpCA,MACAqB,EAboC,EAapCA,oBACAC,EAdoC,EAcpCA,kBACAC,EAfoC,EAepCA,qBACAC,EAhBoC,EAgBpCA,mBAEAd,EAAUC,0BAA4BD,EAAUC,2BAA6BA,IAC7E/D,EAAA,EAAQyD,QAAQ,gCAChBjF,KAAKD,SAAS,CACVyD,4BAA4B,EAC5BD,aAAc,GACdJ,gBAAiB,OAClB,kBAAM,EAAKnE,MAAM2F,cAAcC,EAAME,OAAO1F,QAE/CkG,EAAUE,wBAA0BF,EAAUE,yBAA2BA,GACzEhE,EAAA,EAAQ6E,MAAM,8BAGdf,EAAUG,eAAiBH,EAAUG,gBAAkBA,IACvDjE,EAAA,EAAQyD,QAAQ,mBAChBjF,KAAKD,SAAS,CACV0D,iBAAiB,EACjBF,aAAc,GACdJ,gBAAiB,OAClB,kBAAM,EAAKnE,MAAM2F,cAAcC,EAAME,OAAO1F,QAE/CkG,EAAUI,aAAeJ,EAAUI,cAAgBA,GACnDlE,EAAA,EAAQ6E,MAAM,iBAEdf,EAAUK,eAAiBL,EAAUK,gBAAkBA,IACvDnE,EAAA,EAAQyD,QAAQ,CAAEqB,QAAS,kBAAmB1D,SAC9C5C,KAAKD,SAAS,CACV2D,iBAAiB,EACjBH,aAAc,GACdJ,gBAAiB,OAClB,kBAAM,EAAKnE,MAAM2F,cAAcC,EAAME,OAAO1F,QAE/CkG,EAAUM,aAAeN,EAAUM,cAAgBA,GACnDpE,EAAA,EAAQ6E,MAAM,CAAEC,QAAS,gBAAiB1D,SAE1C0C,EAAUO,uBAAyBP,EAAUO,wBAA0BA,IACvErE,EAAA,EAAQyD,QAAQ,4BAChBjF,KAAKD,SAAS,CACV4D,yBAAyB,EACzBJ,aAAc,GACdJ,gBAAiB,OAClB,kBAAM,EAAKnE,MAAM2F,cAAcC,EAAME,OAAO1F,QAE/CkG,EAAUQ,qBAAuBR,EAAUQ,sBAAwBA,GACnEtE,EAAA,EAAQ6E,MAAM,0BAEdf,EAAUS,sBAAwBT,EAAUS,uBAAyBA,IACrEvE,EAAA,EAAQyD,QAAQ,2BAChBjF,KAAKD,SAAS,CACV6D,wBAAwB,EACxBL,aAAc,GACdJ,gBAAiB,OAClB,kBAAM,EAAKnE,MAAM2F,cAAcC,EAAME,OAAO1F,QAE/CkG,EAAUU,oBAAsBV,EAAUU,qBAAuBA,GACjExE,EAAA,EAAQ6E,MAAM,yBAEdf,EAAUW,qBAAuBX,EAAUW,sBAAwBA,IACnEzE,EAAA,EAAQyD,QAAQ,0BAChBjF,KAAKD,SAAS,CACVuD,uBAAuB,EACvBC,aAAc,GACdJ,gBAAiB,OAClB,kBAAM,EAAKnE,MAAM2F,cAAcC,EAAME,OAAO1F,QAE/CkG,EAAUY,mBAAqBZ,EAAUY,oBAAsBA,GAC/D1E,EAAA,EAAQ6E,MAAM,wBAEdf,EAAUa,sBAAwBb,EAAUa,uBAAyBA,IACrE3E,EAAA,EAAQyD,QAAQ,4BAChBjF,KAAKD,SAAS,CACV8D,wBAAwB,EACxBN,aAAc,GACdJ,gBAAiB,OAClB,kBAAM,EAAKnE,MAAM2F,cAAcC,EAAME,OAAO1F,QAE/CkG,EAAUc,oBAAsBd,EAAUc,qBAAuBA,GACjE5E,EAAA,EAAQ6E,MAAM,4B,+BAkCZ,IAAD,SAaDrG,KAAKvB,MAXLyE,EAFC,EAEDA,sBACAC,EAHC,EAGDA,gBACAG,EAJC,EAIDA,sBACAC,EALC,EAKDA,aAEAC,EAPC,EAODA,2BACAC,EARC,EAQDA,gBACAE,EATC,EASDA,wBACAC,EAVC,EAUDA,uBACAC,EAXC,EAWDA,uBACAT,EAZC,EAYDA,qBAZC,EAsDDpD,KAAKhB,MAvCLgG,EAfC,EAeDA,SACAuB,EAhBC,EAgBDA,gBACAC,EAjBC,EAiBDA,uBACAC,EAlBC,EAkBDA,qBACAC,EAnBC,EAmBDA,kBASAvG,EA5BC,EA4BDA,aACA8F,EA7BC,EA6BDA,oBACAC,EA9BC,EA8BDA,kBACAhH,EA/BC,EA+BDA,eAEAyH,GAjCC,EAiCDA,yBACAC,GAlCC,EAkCDA,kBAEAC,GApCC,EAoCDA,OACAC,GArCC,EAqCDA,cAEAC,GAvCC,EAuCDA,OACAC,GAxCC,EAwCDA,cAEAC,GA1CC,EA0CDA,eACAC,GA3CC,EA2CDA,sBAEAC,GA7CC,EA6CDA,cACAC,GA9CC,EA8CDA,qBAEAC,GAhDC,EAgDDA,QACAC,GAjDC,EAiDDA,QACAC,GAlDC,EAkDDA,gBACAC,GAnDC,EAmDDA,qBACAC,GApDC,EAoDDA,cACAC,GArDC,EAqDDA,eAGIzI,GAAmB+F,EAAnB/F,MAAO0I,GAAY3C,EAAZ2C,QACPC,GAASP,GAATO,KACAC,GAAwBN,GAAxBM,oBAQJC,IAH0B7I,GAAM8I,WAAa,IAAIvF,KAAI,SAAA8B,GACrD,OAAO,2BAAKA,GAAZ,IAAe0D,KAAM,IAAIxD,KAAKF,EAAE2D,MAAMC,qBAAsBpF,WAAY,IAAI0B,KAAKF,EAAE2D,MAAME,0BAEnDC,QAAO,SAACC,EAAGC,GAEjD,OADAD,EAAEC,EAAEN,MAAJ,sBAAgBK,EAAEC,EAAEN,OAAS,IAA7B,CAAiCM,IAC1BD,IACR,IAaGE,GAAc,SAAC,GAAsB,IAApBhF,EAAmB,EAAnBA,aACnB,OACIA,EAAaiF,OAAS,EAClB,yBAAKlI,UAAWC,IAAIkI,UAChB,uBACIC,QAAS,WACL,EAAK3I,SAAS,CAAEwD,aAAc,KAC9B,EAAKxD,SAAS,CACVqD,qBAAsB,EAAK3E,MAAM2E,qBAAqBZ,KAAI,SAAAC,GACtD,OAAO,2BAAKA,GAAZ,IAAkByB,SAAS,UAIvCzD,MAAO,CAAEC,YAAa,SAGtB,uBAAUiI,cAAepF,EAAaiF,OAAS,EAAGlI,UAAWC,IAAIqI,UAAjE,UAA+ErF,EAAaiF,OAA5F,eAEJ,uBACI/G,KAAK,UACLoH,KAAM,kBAACC,EAAA,EAAD,MACNrI,MAAO,CAAEC,YAAa,QACtBqI,KAAMC,WAAW,QAAU,SAC3BC,SAAkC,IAAxB1F,EAAaiF,OACvBE,QAAS,WACDQ,YAAgB,kBAAmB3F,GACnC,EAAKxD,SAAS,CAAEyD,4BAA4B,IAG5C2F,YAAqB,qBAXjC,mBAiBA,uBACI1H,KAAK,UACLoH,KAAM,kBAACO,EAAA,EAAD,MACN3I,MAAO,CAAEC,YAAa,QACtBqI,KAAMC,WAAW,QAAU,SAC3BC,SAAkC,IAAxB1F,EAAaiF,OACvBE,QAAS,WACDQ,YAAgB,SAAU3F,GAC1B,EAAKxD,SAAS,CAAE0D,iBAAiB,IAGjC0F,YAAqB,YAXjC,UAiBA,uBACI1H,KAAK,UACLoH,KAAM,kBAACQ,EAAA,EAAD,MACN5I,MAAO,CAAEC,YAAa,QACtBqI,KAAMC,WAAW,QAAU,SAC3BC,SAAkC,IAAxB1F,EAAaiF,OACvBE,QAAS,kBAAMY,YACXtC,GACAD,GACA,KACAxD,GACA,cACAX,MAZR,WAkBH,kBAACI,GAAD,CAAM1C,UAAWC,IAAIgJ,MAArB,cAGb,OACI,oCACI,uBAAKC,OAAQ,GAAI/I,MAAO,CAAEgJ,aAAc,SACpC,uBAAKC,GAAI,GAAIC,GAAI,IACb,uBACIvJ,MACI,kBAAC4C,GAAD,KACI,kBAAC3C,EAAA,EAAD,CAAsBI,MAAO,CAAEC,YAAa,SADhD,IAC4D,0BAAMJ,UAAWC,IAAIqJ,UAAWlB,QAAS,kBAAMpB,GAAQuC,WAAvD,kBAD5D,IACoJ,IADpJ,YAIJC,UAAW,CAAEC,MAAO,uBACpBC,UAAW,CAAEC,cAAe,QAC5BtC,QAASA,IAET,yBAAKrH,UAAWC,IAAI2J,QAChB,kBAACnH,GAAD,CAAOoH,MAAO,GAAIlL,GAAMmL,WAAc,IAAMnL,GAAMmL,WAElD,2BAAInL,GAAMoL,aAAe,IAAI7F,KAAKvF,GAAMoL,aAAaC,eAAe,cAOpF,uBAAKd,OAAQ,IACT,uBAAKE,GAAI,GAAIC,GAAI,IACb,uBACIlJ,MAAO,CAAEgJ,aAAc,QACvBrJ,MAAO,kBAACmI,GAAD,CAAahF,aAAcA,IAClCuG,UAAW,CAAEC,MAAO,uBACpBC,UAAW,CAAEC,cAAe,QAC5BtC,QAASA,KAGPvE,GAAwB,IAAIZ,KAAI,SAACC,EAAMC,GACrC,OACI,yBAAKpC,UAAWC,IAAIgK,KAAM3H,IAAKF,GAC3B,uBAAU3D,MAAO0D,EAAM+H,SAAS,IAAIC,SAAU,EAAK3G,iBAAkBxD,UAAWC,IAAImK,SAAUxG,QAASzB,EAAKyB,UAC5G,yBAAK5D,UAAWC,IAAIoK,SAChB,yBAAKC,IAAKC,YAAYpI,EAAKqI,SAAUC,IAAKrI,KAE9C,yBAAKpC,UAAWC,IAAIyK,aAChB,yBAAK1K,UAAWC,IAAI0K,WAChB,wBAAI3K,UAAWC,IAAIgJ,MAAO9G,EAAKtB,MAC/B,uBAAO+J,MAAOzI,EAAK0I,qBACf,uBAAQzC,QAAS,kBAAM,EAAK3I,SAAS,CAAEoD,gBAAiBV,EAAMS,uBAAuB,MAArF,YAMR,yBAAK5C,UAAWC,IAAI6K,iBAChB,yBAAK9K,UAAWC,IAAI8K,qBAChB,6BAAK,0BAAM/K,UAAWC,IAAIH,OAArB,oBAAmD,8BAAOgC,YAAWK,EAAKiC,UAC/E,6BAAK,0BAAMpE,UAAWC,IAAIH,OAArB,cAA6C,8BAAOqC,EAAK6I,WAC9D,6BAAK,0BAAMhL,UAAWC,IAAIH,OAArB,eAA8C,8BAAOmL,WAAW9I,EAAK+I,UAAUlB,eAAe,SAA4B,QAAlB7H,EAAK0C,SAAqB,SAAI,OAE/I,yBAAK7E,UAAWC,IAAIkL,sBAChB,6BAAK,0BAAMnL,UAAWC,IAAIH,OAArB,iBAAgD,8BAAOqC,EAAK2B,MACjE,6BACI,0BAAM9D,UAAWC,IAAIH,OAArB,cACA,8BACIqC,EAAKiJ,SAAWjJ,EAAKiJ,SAEb,oCAEwB,aAAhBjJ,EAAKiC,QAAyC,aAAhBjC,EAAKiC,QAA6C,6BAApBjC,EAAKkJ,YAC7D,uBACIrL,UAAWC,IAAIqL,OACflD,QAAS,kBAAM,EAAK3I,SAAS,CAAE4D,yBAAyB,EAAMR,gBAAiBV,IAAQ,WACnF,EAAKzD,MAAM6M,kBAAkBpJ,EAAKqJ,mBAEtCrK,KAAK,QALT,UAe5B,6BACI,0BAAMnB,UAAWC,IAAIH,OAArB,aACA,8BACIqC,EAAKsJ,QAAUtJ,EAAKsJ,QAChB,uBACIzL,UAAWC,IAAIqL,OACflD,QAAS,kBAAM,EAAK3I,SAAS,CAAE6D,wBAAwB,EAAMT,gBAAiBV,IAAQ,WAClF,EAAKzD,MAAM6M,kBAAkBpJ,EAAKqJ,mBAEtCrK,KAAK,QALT,SAWZ,6BAAK,0BAAMnB,UAAWC,IAAIH,OAArB,iBACD,+BACMqC,EAAKuJ,iBAAmC,kBAAhBvJ,EAAKiC,QAA8C,YAAhBjC,EAAKiC,SAC9D,uBACIjD,KAAK,OACL+I,SAAS,kBACT/J,MAAO,CAAEwL,QAAS,GAClBvD,QAAS,WACL,EAAK3I,SAAS,CAAE8D,wBAAwB,EAAMV,gBAAiBV,OAI3E,uBAAGyJ,KAAMzJ,EAAK0J,YAAalI,OAAO,QAAQuG,SAAU/H,EAAKuJ,2BAU7F,uBACIvL,MAAO,CAAEgJ,aAAc,QACvBrJ,MAAO,kBAAC4C,GAAD,CAAM1C,UAAWC,IAAIgJ,MAArB,gBACPO,UAAW,CAAEC,MAAO,uBACpBC,UAAW,CAAEC,cAAe,QAC5BtC,QAASA,IAjNN,WACnB,IAAMyE,EAAM,GACZ,IAAK,IAAIxJ,KAAOkF,GACZsE,EAAIC,KACA,yBAAKzJ,IAAKA,GACN,wBAAInC,MAAO,CAAE6L,WAAY,OAAQrC,cAAe,SAAWrH,GAC3D,kBAAC,EAAD,CAAUT,KAAM2F,GAAelF,GAAK2J,cAIhD,OAAOH,EAAIG,UAyMMC,KAGT,uBAAK9C,GAAI,EAAGC,GAAI,IACZ,uBACIlJ,MAAO,CAAEgJ,aAAc,QACvBrJ,MAAO,kBAAC4C,GAAD,CAAM1C,UAAWC,IAAIgJ,MAArB,IAA4B,kBAACkD,EAAA,EAAD,MAA5B,WACP3C,UAAW,CAAEC,MAAO,uBACpBC,UAAW,CAAEC,cAAe,QAY5BtC,QAASA,IAET,2BAAI1I,GAAMP,OAEd,uBACI+B,MAAO,CAAEgJ,aAAc,QACvBrJ,MAAO,kBAAC4C,GAAD,CAAM1C,UAAWC,IAAIgJ,MAArB,IAA4B,kBAACmD,EAAA,EAAD,MAA5B,uBACP5C,UAAW,CAAEC,MAAO,uBACpBC,UAAW,CAAEC,cAAe,QAC5BtC,QAASA,IAET,yBAAKrH,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,iBACA,8BAAOnB,GAAMyF,QAAU1E,KAAKuE,iBAAiBtF,MAEjD,yBAAKqB,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,iBACA,+BAAQmL,WAAWtM,GAAM2N,QAAU,GAAGtC,eAAe,QAAS,CAAE7J,MAAO,WAAY0E,SAAUlG,GAAMkG,UAAY,WAGvH,uBACI1E,MAAO,CAAEgJ,aAAc,QACvBrJ,MAAO,kBAAC4C,GAAD,CAAM1C,UAAWC,IAAIgJ,MAAM,kBAACsD,EAAA,EAAD,MAA3B,wBACP/C,UAAW,CAAEC,MAAO,uBACpBC,UAAW,CAAEC,cAAe,QAC5BtC,QAASA,IAET,yBAAKrH,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,gBACA,8BAAOwH,GAAKvI,UAAY,IAAMuI,GAAKtI,WAEvC,yBAAKgB,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,UACA,8BAAOnB,GAAM6N,cAEjB,yBAAKxM,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,gBACA,8BAAOnB,GAAM8N,cAGrB,uBACItM,MAAO,CAAEgJ,aAAc,QACvBrJ,MAAO,kBAAC4C,GAAD,CAAM1C,UAAWC,IAAIgJ,MAAM,kBAACyD,EAAA,EAAD,MAA3B,uBACPlD,UAAW,CAAEC,MAAO,uBACpBC,UAAW,CAAEC,cAAe,QAC5BtC,QAASA,IAGT,yBAAKrH,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,SACA,8BAAOnB,IAASA,GAAMgO,MAAQhO,GAAMgO,KAAKC,KAAOjO,GAAMgO,KAAKE,QAAU,eAAiB,uBAAGlJ,OAAO,QAAQiI,MAAOjN,GAAMgO,MAAQ,CAAEC,IAAK,KAAMA,MAAOjO,GAAMgO,MAAQ,CAAE7M,MAAO,KAAMA,SAElL,yBAAKE,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,aACA,8BAAOnB,IAASA,GAAMgO,MAAgC,QAAxBhO,GAAMgO,KAAKG,SAAqB,eAAiB,cAGvF,uBACI3M,MAAO,CAAEgJ,aAAc,QACvBrJ,MAAO,kBAAC4C,GAAD,CAAM1C,UAAWC,IAAIgJ,MAAM,kBAAC8D,EAAA,EAAD,MAA3B,0BACPvD,UAAW,CAAEC,MAAO,uBACpBC,UAAW,CAAEC,cAAe,QAC5BtC,QAASA,IAET,yBAAKrH,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,aACA,8BAAOnB,GAAMgC,iBAAmBhC,GAAMgC,eAAe5B,WAAkB,IAAMJ,GAAMgC,eAAe3B,UAAY,MAElH,yBAAKgB,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,UACA,8BAAOnB,GAAMgC,gBAAkBhC,GAAMgC,eAAeqM,SAG5D,uBACI7M,MAAO,CAAEgJ,aAAc,QACvBrJ,MAAO,kBAAC4C,GAAD,CAAM1C,UAAWC,IAAIgJ,MAAM,kBAAClJ,EAAA,EAAD,MAA3B,0BACPyJ,UAAW,CAAEC,MAAO,uBACpBC,UAAW,CAAEC,cAAe,QAC5BsD,MACI,uBACI9L,KAAK,OACLoH,KAAM,kBAAC4D,EAAA,EAAD,MACN1D,KAAMC,WAAW,QAAU,SAC3BN,QAAS,kBAAM,EAAK3I,SAAS,CAAEuD,uBAAuB,MAJ1D,QASJqE,QAASA,IAGT,yBAAKrH,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,aACA,8BACKnB,IAASA,GAAM+B,iBAAmB/B,GAAM+B,gBAAgB3B,WAAaJ,GAAM+B,gBAAgB1B,UACxFL,GAAM+B,gBAAgB3B,UAAY,IAAMJ,GAAM+B,gBAAgB1B,WAG1E,yBAAKgB,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,YACA,8BACKnB,IAASA,GAAM+B,kBAAoB/B,GAAM+B,gBAAgBxB,UAAY,IAAM,KAAOP,GAAM+B,gBAAgBvB,UAAY,MAG7H,yBAAKa,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,YACA,8BAAOnB,IAASA,GAAM+B,iBAAmB/B,GAAM+B,gBAAgBzB,UAEnE,yBAAKe,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,QACA,8BAAOnB,IAASA,GAAM+B,iBAAmB/B,GAAM+B,gBAAgBnB,WAEnE,yBAAKS,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,wBACA,8BAAOnB,IAASA,GAAM+B,iBAAmB/B,GAAM+B,gBAAgBrB,WAEnE,yBAAKW,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,iBACA,8BAAOnB,IAASA,GAAM+B,iBAAmB/B,GAAM+B,gBAAgBpB,UAEnE,yBAAKU,UAAWC,IAAIoM,aAChB,uBAAGrM,UAAWC,IAAIH,OAAlB,iBACA,8BAAOnB,GAAMgC,gBAAkBhC,GAAMgC,eAAenB,WAKpE,kBAAC0N,EAAA,EAAD,CACIvN,QAASiD,EACTuK,QAAS,kBAAM,EAAK1N,SAAS,CAAEmD,uBAAuB,EAAOC,gBAAiB,MAC9EA,gBAAiBA,EACjBoD,gBAAiBA,EACjBG,kBAAmBA,EACnBF,uBAAwBA,EACxBC,qBAAsBA,IAE1B,kBAAC,EAAD,CACIxG,QAASqD,EACTpD,aAAc,kBAAM,EAAKH,SAAS,CAAEuD,uBAAuB,KAC3DrE,MAAOA,GACPkB,aAAcA,EACd8F,oBAAqBA,EACrBC,kBAAmBA,EACnBhH,eAAgBA,IAWpB,kBAACwO,EAAA,EAAD,CACIzN,QAASuD,EACTtD,aAAc,kBAAM,EAAKH,SAAS,CAAEyD,4BAA4B,KAChEmK,mBAAoBpK,EACpBoD,yBAA0BA,GAC1BC,kBAAmBA,KAEvB,kBAAC,IAAD,CACI3G,QAASwD,EACTvD,aAAc,kBAAM,EAAKH,SAAS,CAAE0D,iBAAiB,KACrDoD,OAAQA,GACRC,cAAeA,GACf6G,mBAAoBpK,IAWxB,kBAACqK,EAAA,EAAD,CACI3N,QAAS0D,EACTzD,aAAc,kBAAM,EAAKH,SAAS,CAAE4D,yBAAyB,KAC7DK,SAAUb,EACV8D,eAAgBA,GAChBC,sBAAuBA,GACvB2G,UAAWhG,KAEf,kBAACiG,EAAA,EAAD,CACI7N,QAAS2D,EACT1D,aAAc,kBAAM,EAAKH,SAAS,CAAE6D,wBAAwB,KAC5DI,SAAUb,EACV4K,oBAAqBrG,GACrBP,cAAeA,GACfC,qBAAsBA,KAE1B,kBAAC4G,GAAA,EAAD,CACI/N,QAAS4D,EACT3D,aAAc,kBAAM,EAAKH,SAAS,CAAE8D,wBAAwB,EAAOV,gBAAiB,QACpFa,SAAUb,EACVsE,cAAeA,GACfD,qBAAsBA,U,GAtpBDzF,aCkE1BkM,uBA/FS,SAAAxP,GAAK,MAAK,CAC9BuG,SAAUvG,EAAMyP,OAAOC,OAAOnJ,SAE9B0B,kBAAmBjI,EAAMyP,OAAOC,OAAOzH,kBACvCF,uBAAwB/H,EAAMyP,OAAOC,OAAO3H,uBAC5CC,qBAAsBhI,EAAMyP,OAAOC,OAAO1H,qBAK1CtG,aAAc1B,EAAMyP,OAAOC,OAAOhO,aAClC8F,oBAAqBxH,EAAMyP,OAAOC,OAAOlI,oBACzCC,kBAAmBzH,EAAMyP,OAAOC,OAAOjI,kBAEvCmB,QAAS5I,EAAMyP,OAAOC,OAAO9G,QAE7BV,yBAA0BlI,EAAMyP,OAAOC,OAAOxH,yBAC9CpB,yBAA0B9G,EAAMyP,OAAOC,OAAO5I,yBAC9CC,uBAAwB/G,EAAMyP,OAAOC,OAAO3I,uBAE5CsB,cAAerI,EAAMyP,OAAOC,OAAOrH,cACnCrB,cAAehH,EAAMyP,OAAOC,OAAO1I,cACnCC,YAAajH,EAAMyP,OAAOC,OAAOzI,YAEjCsB,cAAevI,EAAMyP,OAAOC,OAAOnH,cACnCrB,cAAelH,EAAMyP,OAAOC,OAAOxI,cACnCC,YAAanH,EAAMyP,OAAOC,OAAOvI,YAEjCwI,cAAe3P,EAAMyP,OAAOC,OAAOC,cACnClH,sBAAuBzI,EAAMyP,OAAOC,OAAOjH,sBAC3CrB,sBAAuBpH,EAAMyP,OAAOC,OAAOtI,sBAC3CC,oBAAqBrH,EAAMyP,OAAOC,OAAOrI,oBAEzCiI,oBAAqBtP,EAAMyP,OAAOG,QAAQN,oBAC1C3G,qBAAsB3I,EAAMyP,OAAOC,OAAO/G,qBAC1CrB,qBAAsBtH,EAAMyP,OAAOC,OAAOpI,qBAC1CC,mBAAoBvH,EAAMyP,OAAOC,OAAOnI,mBAExCuB,gBAAiB9I,EAAMyP,OAAOC,OAAO5G,gBAErCC,qBAAsB/I,EAAMyP,OAAOC,OAAO3G,qBAC1CrB,qBAAsB1H,EAAMyP,OAAOC,OAAOhI,qBAC1CC,mBAAoB3H,EAAMyP,OAAOC,OAAO/H,mBAExCsB,eAAgBjJ,EAAMyP,OAAOC,OAAOzG,mBAIZ,SAAA4G,GAAQ,MAAK,CACrC3J,cAAgB,SAAAvF,GACZkP,EAASC,IAAc5J,cAAcvF,KAEzCmH,gBAAiB,SAAAxH,GACbuP,EAASC,IAAchI,gBAAgBxH,KAK3CG,eAAgB,SAAAsP,GACZF,EAASC,IAAcrP,eAAesP,KAE1CC,aAAc,SAAAnB,GACVgB,EAASC,IAAcE,aAAanB,KAExC1G,kBAAmB,SAAAzE,GACfmM,EAASC,IAAc3H,kBAAkBzE,KAE7C0E,OAAQ,SAAA1E,GACJmM,EAASC,IAAc1H,OAAO1E,KAElC4E,OAAQ,SAAA5E,GACJmM,EAASC,IAAcxH,OAAO5E,KAElC8E,eAAgB,SAAA9E,GACZmM,EAASC,IAActH,eAAe9E,KAE1CgF,cAAe,SAAAhF,GACXmM,EAASC,IAAcpH,cAAchF,KAEzCuM,eAAgB,WACZJ,EAASC,IAAcG,mBAE3B7J,wBAAyB,WACrByJ,EAASK,IAAe9J,4BAE5BgH,kBAAmB,SAAAzM,GACfkP,EAASC,IAAc1C,kBAAkBzM,KAE7CqI,cAAe,SAAA3C,GACXwJ,EAASC,IAAc9G,cAAc3C,KAEzC8J,iBAAkB,SAAAxP,GACdkP,EAASC,IAAcK,iBAAiBxP,QAGjC6O,CAA6ChL","file":"static/js/28.8a0c9941.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail\":\"detail--31dAL\",\"td\":\"td--1UunK\",\"button\":\"button--q2cPx\",\"content\":\"content--3Qcug\",\"breakCrum\":\"breakCrum--2YWAK\",\"card\":\"card--2qbXc\",\"checkbox\":\"checkbox--3fBDk\",\"cardImg\":\"cardImg--2qOSo\",\"cardContent\":\"cardContent--2nCZQ\",\"cardTitle\":\"cardTitle--2AtsI\",\"cardDescription\":\"cardDescription--3kdFS\",\"cardDescriptionRight\":\"cardDescriptionRight--2BhS8\",\"cardDescriptionLeft\":\"cardDescriptionLeft--2if_t\",\"title\":\"title--b9MX6\",\"timeLine\":\"timeLine--3M_Fj\",\"description\":\"description--3XmYL\",\"bold\":\"bold--2bkoL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeLine\":\"timeLine--mfClV\",\"timeLineBody\":\"timeLineBody--1raWq\",\"timeLineItem\":\"timeLineItem--28Ebt\",\"timeLineContent\":\"timeLineContent--3kU6l\"};","import React from 'react';\nimport { Modal, Form, Input, Select, InputNumber, Button, Alert, message } from 'antd';\nimport { ShoppingCartOutlined } from '@ant-design/icons'\nimport cls from '../ResolveModal/style.module.less';\nimport CatchError from \"../../../core/util/CatchError\";\n\nconst layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 18 },\n};\n\nclass EditShippingOrder extends React.Component {\n    state = {\n        note: \"\"\n    }\n\n    handleOk = () => {\n        this.myRef.click()\n    }\n\n    onFinish = value => {\n        const { order, doEditShipping } = this.props;\n        doEditShipping({\n            orderId: order.id,\n            firstName: value.firstName,\n            lastName: value.lastName,\n            company: value.company,\n            address1: value.address1,\n            address2: value.address2,\n            city: value.city,\n            province: value.province,\n            country: value.country,\n            postcode: value.postcode,\n            phone: value.phone\n        })\n        this.setState({ note: \"\" })\n    }\n\n    render() {\n        const { visible, handleCancel, editShipping, order } = this.props;\n\n        return (\n            <div>\n                <Modal\n                    title={\n                        <div>\n                            <ShoppingCartOutlined className={cls.green} style={{ marginRight: \"8px\" }} />\n                            Edit shipping\n                        </div>\n                    }\n                    visible={visible}\n                    onOk={this.handleOk}\n                    confirmLoading={editShipping}\n                    onCancel={handleCancel}\n                    destroyOnClose\n                >\n                    <Form\n                        onFinish={this.onFinish}\n                        layout=\"horizontal\"\n                        initialValues={{ \n                            firstName: order.shippingAddress && order.shippingAddress.firstName,\n                            lastName: order.shippingAddress && order.shippingAddress.lastName,\n                            company: order.shippingAddress && order.shippingAddress.company,\n                            address1: order.shippingAddress && order.shippingAddress.address1,\n                            address2: order.shippingAddress && order.shippingAddress.address2,\n                            city: order.shippingAddress && order.shippingAddress.city,\n                            province: order.shippingAddress && order.shippingAddress.province,\n                            country: order.shippingAddress && order.shippingAddress.country,\n                            postcode: order.shippingAddress && order.shippingAddress.postcode,\n                            phone: order.billingAddress && order.billingAddress.phone\n                        }}\n                        {...layout}\n                    >\n                        <Form.Item\n                            name=\"firstName\"\n                            label=\"First name\"\n                            // rules={[{ required: true, message: 'Please input first name' }]}\n\n                        >\n                            <Input placeholder=\"Enter first name\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"lastName\"\n                            label=\"Last name\"\n                            // rules={[{ required: true, message: 'Please input last name' }]}\n\n                        >\n                            <Input placeholder=\"Enter last name\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"company\"\n                            label=\"Company\"\n\n                        >\n                            <Input placeholder=\"Enter company\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"address1\"\n                            label=\"Address 1\"\n                            // rules={[{ required: true, message: 'Please input address 1' }]}\n\n                        >\n                            <Input placeholder=\"Enter address 1\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"address2\"\n                            label=\"Address 2\"\n\n                        >\n                            <Input placeholder=\"Enter address 2\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"city\"\n                            label=\"City\"\n                            // rules={[{ required: true, message: 'Please input city' }]}\n\n                        >\n                            <Input placeholder=\"Enter city\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"province\"\n                            label=\"Province\"\n                            // rules={[{ required: true, message: 'Please input province' }]}\n\n                        >\n                            <Input placeholder=\"Enter province\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"country\"\n                            label=\"Country\"\n                            rules={[{ required: true, message: 'Please input country' }]}\n\n                        >\n                            <Input placeholder=\"Enter country\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"postcode\"\n                            label=\"Shipping zip\"\n                            // rules={[{ required: true, message: 'Please input zip' }]}\n\n                        >\n                            <Input placeholder=\"Enter zip\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"phone\"\n                            label=\"Phone\"\n                            // rules={[{ required: true, message: 'Please input phone' }]}\n\n                        >\n                            <Input placeholder=\"Enter phone\" />\n                        </Form.Item>\n\n                        <Button type=\"primary\" htmlType=\"submit\" ref={input => this.myRef = input} style={{ display: \"none\" }}>\n                            Submit\n                        </Button>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\nexport default EditShippingOrder;\n","import capitalize from './capitalize';\n\nconst checkOrderLogs = ({author, type, itemSku, data}) => {\n    switch (type) {\n        case \"ORDER_CREATED\":\n            return capitalize(type)\n        case \"COOLING_OFF\":\n            return 'Order was cooling-off'\n        case \"INVALID_SHIPPING_COUNTRY\":\n            return `Order invalid shipping country${itemSku ? `,item \"${itemSku}\"` : \"\"}`\n        case \"PENDING_DESIGN\":\n            return `Pending design ${itemSku ? `,item \"${itemSku}\"` : \"\"}`\n        case \"CHOOSE_SUPPLIER\":\n            return `${author || \"\"} choosed supplier for item \"${itemSku ? itemSku : \"\"}\"`\n        case \"CHOOSE_CARRIER\":\n            return `${author || \"\"} choosed carrier for item \"${itemSku ? itemSku : \"\"}\"`\n        case \"NEED_PAY_COOLING_OFF\":\n            return `Need pay ${itemSku ? `for item \"${itemSku}\"` : \"\"}`\n        case \"PAID\":\n            return `Paid ${itemSku ? `for item \"${itemSku}\"` : \"\"}`\n        case \"NOT_ENOUGH_BALANCE\":\n            return `Not enough balance ${itemSku ? `for item \"${itemSku}\"` : \"\"}`\n        case \"PROCESSING\":\n            return `Processing ${itemSku ? `item \"${itemSku}\"` : \"\"}`\n        case \"WAITING_FOR_ADMIN_APPROVE\":\n            return `Waiting for admin prove ${itemSku ? `item \"${itemSku}\"` : \"\"}`\n        case \"ACTION_REQUIRE\":\n            return `${author || \"\"} setted action require for item \"${itemSku ? itemSku : \"\"}\"`\n        case \"ON_HOLD\":\n            return `${author || \"\"} on hold for item \"${itemSku ? itemSku : \"\"}\"`\n        case \"UPDATE_SHIPPING_ADDRESS\":\n            return `${author || \"\"} update shipping address for item \"${itemSku ? itemSku : \"\"}\"`\n        case \"UPDATE_DESIGN\":\n            return `${author || \"\"} update design for item \"${itemSku ? itemSku : \"\"}\"`\n        case \"SOLVE_ON_HOLD\":\n            return `${author || \"\"} solve on hold for item \"${itemSku ? itemSku : \"\"}\"`\n        case \"SOLVE_ACTION_REQUIRED\":\n            return `${author || \"\"} solve action required for item \"${itemSku ? itemSku : \"\"}\"`\n        case \"APPROVED_REQUEST_CANCEL\":\n            return `${author || \"\"} approved request cancel for item \"${itemSku ? itemSku : \"\"}\"`\n        case \"REJECTED_REQUEST_CANCEL\":\n            return `${author || \"\"} rejected request cancel for item \"${itemSku ? itemSku : \"\"}\"`\n        case \"IN_PRODUCTION\":\n            return `Item \"${itemSku}\" in production`\n        case \"SHIPPED\":\n            return `Item \"${itemSku}\" shipped`\n        case \"UPDATED_TRACKING\":\n            return `${author || \"\"} update tracking for item \"${itemSku ? itemSku : \"\"}\"`\n        case \"SUPPLIER_REQUEST_CANCEL\":\n            return `${author || \"\"} request cancel for item \"${itemSku ? itemSku : \"\"}\"`\n        case \"CANCELED\":\n            return `Item \"${itemSku}\" cancelled`\n        case \"AUTO_REFUNDED\":\n            return `Item \"${itemSku}\" auto refunded`\n        case \"REFUNDED\":\n            return `Item \"${itemSku}\" refunded`\n        default:\n            return null;\n    }\n}\nexport default checkOrderLogs;","import React, { Component } from 'react'\nimport cls from './style.module.less';\nimport checkOrderLogs from '../../core/util/checkOrderLog';\n\nexport default class TimeLine extends Component {\n    render() {\n        const { data } = this.props;\n        return (\n            <div className={cls.timeLine}>\n                <div className={cls.timeLineBody}>\n                    {(data || []).map((item, index) => {\n                        return (\n                            <div className={cls.timeLineItem} key={index}>\n                                <div className={cls.timeLineContent}>\n                                    <p className=\"title\">{checkOrderLogs(item)}</p>\n                                    <p className=\"time\">{item.hourAndMin}</p>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Card, Button, Typography, Badge, Checkbox, message } from 'antd';\nimport {\n    ShoppingCartOutlined,\n    EditOutlined,\n    ImportOutlined,\n    ExportOutlined,\n    NotificationOutlined,\n    FileTextOutlined,\n    ShopOutlined,\n    SolutionOutlined,\n    ContactsOutlined\n} from '@ant-design/icons';\nimport { isMobile } from 'react-device-detect';\n\nimport cls from \"./OrdersDetail.module.less\";\nimport capitalize from '../../core/util/capitalize';\nimport getImageUrl from '../../core/util/getImageUrl';\nimport PrintDesignDrawer from '../../components/Drawer/PrintDesign/PrintDesign';\nimport EditShippingOrder from '../../components/Modal/EditShippingOrder/EditShippingOrder';\nimport SetActionRequiredModal from '../../components/Modal/SetActionRequiredModal/SetActionRequiredModal';\nimport RefundOrder from '../../components/Modal/RefundModal/RefundModal';\nimport ResendModal from '../../components/Modal/ResendModal/ResendModal';\nimport AssignSupplier from '../../components/Modal/AssignSupplier/AssignSupplier';\nimport AssignCarrierModal from '../../components/Modal/AssignCarrier/AssignCarrier';\nimport ModalCheckMoreAction from '../../components/Modal/ModalCheckMoreAction/ModalCheckMoreAction';\nimport checkMoreAction from '../../core/util/checkMoreAction';\nimport TimeLine from '../../components/TimeLine/TimeLine';\nimport AddTrackingIdModal from '../../components/Modal/AddTrackingIdModal/AddTrackingIdModal';\n\nconst { Title, Text } = Typography;\nconst key = \"resend\";\n\nexport default class OrderDetail extends Component {\n    state = {\n        openPrintDesignDrawer: false,\n        lineItemCurrent: {},\n        lineItemsWithOrderId: [],\n        openEditNoteModal: false,\n        openEditShippingModal: false,\n        rowsSelected: [],\n        openModalSetActionRequired: false,\n        openModalRefund: false,\n        openModalResend: false,\n        openModalAssignSupplier: false,\n        openModalAssignCarrier: false,\n        openAddTrackingIdModal: false\n    }\n    componentDidMount() {\n        const { fetchOneOrder, match, fetchAllCarriesNoPaging } = this.props;\n        // getAllSupplier();\n        fetchOneOrder(match.params.id);\n        fetchAllCarriesNoPaging();\n    }\n    componentDidUpdate(preProps) {\n        const { oneOrder } = this.props;\n        const { order, success } = oneOrder;\n\n        if (success && preProps.oneOrder.success !== success) {\n            this.setState({\n                lineItemsWithOrderId: (order.lineItems || []).map(item => ({\n                    ...item, orderId: order.id, currency: order.currency, checked: false\n                }))\n            }, () => console.log(this.state.lineItemsWithOrderId))\n        }\n\n\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        const {\n            setActionRequiredSuccess,\n            setActionRequiredError,\n            refundSuccess,\n            refundError,\n            resendSuccess,\n            resendError,\n            assignSupplierSuccess,\n            assignSupplierError,\n            assignCarrierSuccess,\n            assignCarrierError,\n            match,\n            editShippingSuccess,\n            editShippingError,\n            addTrackingIdSuccess,\n            addTrackingIdError\n        } = this.props;\n        if (nextProps.setActionRequiredSuccess && nextProps.setActionRequiredSuccess !== setActionRequiredSuccess) {\n            message.success(\"Set action required success!\")\n            this.setState({\n                openModalSetActionRequired: false,\n                rowsSelected: [],\n                lineItemCurrent: null\n            }, () => this.props.fetchOneOrder(match.params.id))\n        }\n        if (nextProps.setActionRequiredError && nextProps.setActionRequiredError !== setActionRequiredError) {\n            message.error(\"Set action required error!\")\n        }\n\n        if (nextProps.refundSuccess && nextProps.refundSuccess !== refundSuccess) {\n            message.success(\"Refund success!\")\n            this.setState({\n                openModalRefund: false,\n                rowsSelected: [],\n                lineItemCurrent: null\n            }, () => this.props.fetchOneOrder(match.params.id))\n        }\n        if (nextProps.refundError && nextProps.refundError !== refundError) {\n            message.error(\"Refund error!\")\n        }\n        if (nextProps.resendSuccess && nextProps.resendSuccess !== resendSuccess) {\n            message.success({ content: \"Resend success!\", key });\n            this.setState({\n                openModalResend: false,\n                rowsSelected: [],\n                lineItemCurrent: null\n            }, () => this.props.fetchOneOrder(match.params.id))\n        }\n        if (nextProps.resendError && nextProps.resendError !== resendError) {\n            message.error({ content: \"Resend error!\", key });\n        }\n        if (nextProps.assignSupplierSuccess && nextProps.assignSupplierSuccess !== assignSupplierSuccess) {\n            message.success(\"Assign supplier success!\")\n            this.setState({\n                openModalAssignSupplier: false,\n                rowsSelected: [],\n                lineItemCurrent: null\n            }, () => this.props.fetchOneOrder(match.params.id))\n        }\n        if (nextProps.assignSupplierError && nextProps.assignSupplierError !== assignSupplierError) {\n            message.error(\"Assign supplier error!\")\n        }\n        if (nextProps.assignCarrierSuccess && nextProps.assignCarrierSuccess !== assignCarrierSuccess) {\n            message.success(\"Assign carrier success!\")\n            this.setState({\n                openModalAssignCarrier: false,\n                rowsSelected: [],\n                lineItemCurrent: null\n            }, () => this.props.fetchOneOrder(match.params.id))\n        }\n        if (nextProps.assignCarrierError && nextProps.assignCarrierError !== assignCarrierError) {\n            message.error(\"Assign carrier error!\")\n        }\n        if (nextProps.editShippingSuccess && nextProps.editShippingSuccess !== editShippingSuccess) {\n            message.success(\"Edit shipping success!\")\n            this.setState({\n                openEditShippingModal: false,\n                rowsSelected: [],\n                lineItemCurrent: null\n            }, () => this.props.fetchOneOrder(match.params.id))\n        }\n        if (nextProps.editShippingError && nextProps.editShippingError !== editShippingError) {\n            message.error(\"Edit shipping error!\")\n        }\n        if (nextProps.addTrackingIdSuccess && nextProps.addTrackingIdSuccess !== addTrackingIdSuccess) {\n            message.success(\"Add tracking ID success!\")\n            this.setState({\n                openAddTrackingIdModal: false,\n                rowsSelected: [],\n                lineItemCurrent: null\n            }, () => this.props.fetchOneOrder(match.params.id))\n        }\n        if (nextProps.addTrackingIdError && nextProps.addTrackingIdError !== addTrackingIdError) {\n            message.error(\"Add tracking ID error!\")\n        }\n    }\n    onChangeCheckBox = e => {\n        const { rowsSelected } = this.state;\n        const lineItem = e.target.value;\n        if (e.target.checked) {\n            const newArr = [...rowsSelected, lineItem];\n            this.setState({ rowsSelected: newArr })\n            this.setState({\n                lineItemsWithOrderId: this.state.lineItemsWithOrderId.map(item => {\n                    if (item.sku === lineItem.sku) return { ...item, checked: true }\n                    return item;\n                })\n            })\n        }\n        else {\n            const newArr = rowsSelected.filter(x => x.id !== lineItem.id)\n            this.setState({ rowsSelected: newArr })\n            this.setState({\n                lineItemsWithOrderId: this.state.lineItemsWithOrderId.map(item => {\n                    if (item.sku === lineItem.sku) return { ...item, checked: false }\n                    return item;\n                })\n            })\n        }\n    }\n    checkStatusOrder = order => {\n        const date = new Date();\n        if (date < new Date(order.coolingOffExp)) {\n            return \"Cooling-off\"\n        }\n        return capitalize(order.status)\n    }\n    render() {\n        const {\n            openPrintDesignDrawer,\n            lineItemCurrent,\n            openEditShippingModal,\n            rowsSelected,\n\n            openModalSetActionRequired,\n            openModalRefund,\n            openModalAssignSupplier,\n            openModalAssignCarrier,\n            openAddTrackingIdModal,\n            lineItemsWithOrderId\n        } = this.state;\n        const {\n            oneOrder,\n            saveImageDesign,\n            saveImageDesignSuccess,\n            saveImageDesignError,\n            doSaveImageDesign,\n\n\n\n            // editNote,\n            // editNoteSuccess,\n            // editNoteError,\n            // doEditNote,\n\n            editShipping,\n            editShippingSuccess,\n            editShippingError,\n            doEditShipping,\n\n            setActionRequiredLoading,\n            setActionRequired,\n\n            refund,\n            refundLoading,\n\n            resend,\n            resendLoading,\n\n            assignSupplier,\n            assignSupplierLoading,\n\n            assignCarrier,\n            assignCarrierLoading,\n\n            oneUser,\n            history,\n            suppliersAssign,\n            addTrackingIdLoading,\n            addTrackingId,\n            carriersAssign\n        } = this.props;\n\n        const { order, loading } = oneOrder;\n        const { user } = oneUser;\n        const { listSuppliersAssign } = suppliersAssign;\n        // const lineItemsWithOrderId = (order.lineItems || []).map(item => ({\n        //     ...item, orderId: order.id, currency: order.currency, checked: false\n        // }))\n\n        const orderLogsGroupByDate = (order.orderLogs || []).map(x => {\n            return { ...x, date: new Date(x.time).toLocaleDateString(), hourAndMin: new Date(x.time).toLocaleTimeString() }\n        })\n        let groupOrderLogs = orderLogsGroupByDate.reduce((r, a) => {\n            r[a.date] = [...r[a.date] || [], a];\n            return r;\n        }, {});\n        const renderTimeline = () => {\n            const arr = []\n            for (let key in groupOrderLogs) {\n                arr.push(\n                    <div key={key}>\n                        <h3 style={{ marginLeft: \"26px\", paddingBottom: \"20px\" }}>{key}</h3>\n                        <TimeLine data={groupOrderLogs[key].reverse()} />\n                    </div>\n                )\n            }\n            return arr.reverse();\n        }\n        const ButtonGroup = ({ rowsSelected }) => {\n            return (\n                rowsSelected.length > 0 ? (\n                    <div className={cls.btnGroup}>\n                        <Button\n                            onClick={() => {\n                                this.setState({ rowsSelected: [] });\n                                this.setState({\n                                    lineItemsWithOrderId: this.state.lineItemsWithOrderId.map(item => {\n                                        return { ...item, checked: false }\n                                    })\n                                })\n                            }}\n                            style={{ marginRight: '16px' }}\n\n                        >\n                            <Checkbox indeterminate={rowsSelected.length > 0} className={cls.totalRow}>{`${rowsSelected.length} selected`}</Checkbox>\n                        </Button>\n                        <Button\n                            type=\"default\"\n                            icon={<NotificationOutlined />}\n                            style={{ marginRight: '16px' }}\n                            size={isMobile ? 'small' : 'middle'}\n                            disabled={rowsSelected.length === 0}\n                            onClick={() => {\n                                if (checkMoreAction(\"ACTION_REQUIRED\", rowsSelected)) {\n                                    this.setState({ openModalSetActionRequired: true })\n                                }\n                                else {\n                                    ModalCheckMoreAction(\"ACTION_REQUIRED\")\n                                }\n                            }}\n                        >\n                            Action required\n                        </Button>\n                        <Button\n                            type=\"default\"\n                            icon={<ImportOutlined />}\n                            style={{ marginRight: '16px' }}\n                            size={isMobile ? 'small' : 'middle'}\n                            disabled={rowsSelected.length === 0}\n                            onClick={() => {\n                                if (checkMoreAction(\"REFUND\", rowsSelected)) {\n                                    this.setState({ openModalRefund: true })\n                                }\n                                else {\n                                    ModalCheckMoreAction(\"REFUND\")\n                                }\n                            }}\n                        >\n                            Refund\n                        </Button>\n                        <Button\n                            type=\"default\"\n                            icon={<ExportOutlined />}\n                            style={{ marginRight: '16px' }}\n                            size={isMobile ? 'small' : 'middle'}\n                            disabled={rowsSelected.length === 0}\n                            onClick={() => ResendModal(\n                                resendLoading,\n                                resend,\n                                null,\n                                rowsSelected,\n                                () => { },\n                                key\n                            )}\n                        >\n                            Resend\n                        </Button>\n                    </div>\n                ) : (<Text className={cls.bold}> Product </Text>)\n            )\n        }\n        return (\n            <>\n                <Row gutter={24} style={{ marginBottom: \"20px\" }}>\n                    <Col md={24} xs={24}>\n                        <Card\n                            title={\n                                <Text>\n                                    <ShoppingCartOutlined style={{ marginRight: '5px' }} /> <span className={cls.breakCrum} onClick={() => history.goBack()}>ORDERS MANAGER</span> {\">\"} DETAILS\n                                </Text>\n                            }\n                            headStyle={{ color: 'rgba(0, 0, 0, 0.45)' }}\n                            bodyStyle={{ paddingBottom: '12px' }}\n                            loading={loading}\n                        >\n                            <div className={cls.detail} >\n                                <Title level={2}>{order.orderName && (\"#\" + order.orderName)}</Title>\n                                {/* <p>{order.orderId && order.orderId}</p> */}\n                                <p>{order.createdDate && new Date(order.createdDate).toLocaleString('en-GB')}</p>\n                                {/* <Tag icon={<SyncOutlined />} color={order.status === \"PROCESSING\" ? \"blue\" : (order.status === \"COMPLETED\" ? \"green\" : \"red\")}>{order.status && capitalize(order.status)}</Tag> */}\n                            </div>\n                        </Card>\n                    </Col>\n                </Row>\n\n                <Row gutter={24}>\n                    <Col md={16} xs={24}>\n                        <Card\n                            style={{ marginBottom: \"20px\" }}\n                            title={<ButtonGroup rowsSelected={rowsSelected} />}\n                            headStyle={{ color: 'rgba(0, 0, 0, 0.45)' }}\n                            bodyStyle={{ paddingBottom: '12px' }}\n                            loading={loading}\n                        // extra={<Button style={{ marginRight: '16px' }} />}\n                        >\n                            {(lineItemsWithOrderId || []).map((item, index) => {\n                                return (\n                                    <div className={cls.card} key={index}>\n                                        <Checkbox value={item} children=\" \" onChange={this.onChangeCheckBox} className={cls.checkbox} checked={item.checked} />\n                                        <div className={cls.cardImg}>\n                                            <img src={getImageUrl(item.imageId)} alt={index} />\n                                        </div>\n                                        <div className={cls.cardContent}>\n                                            <div className={cls.cardTitle}>\n                                                <h4 className={cls.bold}>{item.name}</h4>\n                                                <Badge count={item.numberDesignMissing}>\n                                                    <Button onClick={() => this.setState({ lineItemCurrent: item, openPrintDesignDrawer: true })}>\n                                                        Design\n                                                    </Button>\n                                                </Badge>\n\n                                            </div>\n                                            <div className={cls.cardDescription}>\n                                                <div className={cls.cardDescriptionLeft}>\n                                                    <div><span className={cls.title}>Product status: </span><span>{capitalize(item.status)}</span></div>\n                                                    <div><span className={cls.title}>Quantity: </span><span>{item.quantity}</span></div>\n                                                    <div><span className={cls.title}>Base cost: </span><span>{parseFloat(item.baseCost).toLocaleString('en-GB')}{item.currency === 'VND' ? 'đ':'$'}</span></div>\n                                                </div>\n                                                <div className={cls.cardDescriptionRight}>\n                                                    <div><span className={cls.title}>Product SKU: </span><span>{item.sku}</span></div>\n                                                    <div>\n                                                        <span className={cls.title}>Supplier: </span>\n                                                        <span>{\n                                                            item.supplier ? item.supplier :\n                                                                (\n                                                                    <>\n                                                                        {\n                                                                            item.status !== \"CANCELED\" && item.status !== \"REFUNDED\" && item.statusNote !== \"INVALID_SHIPPING_COUNTRY\" && (\n                                                                                <Button\n                                                                                    className={cls.button}\n                                                                                    onClick={() => this.setState({ openModalAssignSupplier: true, lineItemCurrent: item }, () => {\n                                                                                        this.props.getAssignSupplier(item.productTypeId)\n                                                                                    })}\n                                                                                    type=\"link\"\n                                                                                >\n                                                                                    Add\n                                                                                </Button>\n                                                                            )\n                                                                        }\n                                                                    </>\n                                                                )\n                                                        }</span>\n                                                    </div>\n                                                    <div>\n                                                        <span className={cls.title}>Carrier: </span>\n                                                        <span>{\n                                                            item.carrier ? item.carrier :\n                                                                <Button\n                                                                    className={cls.button}\n                                                                    onClick={() => this.setState({ openModalAssignCarrier: true, lineItemCurrent: item }, () => {\n                                                                        this.props.getAssignSupplier(item.productTypeId)\n                                                                    })}\n                                                                    type=\"link\"\n                                                                >\n                                                                    Add\n                                                            </Button>}\n                                                        </span>\n                                                    </div>\n                                                    <div><span className={cls.title}>Tracking ID: </span>\n                                                        <span>\n                                                            {!item.trackingNumber && (item.status === \"IN_PRODUCTION\" || item.status === \"SHIPPED\") && (\n                                                                <a\n                                                                    type=\"link\"\n                                                                    children=\"Add tracking ID\"\n                                                                    style={{ padding: 0 }}\n                                                                    onClick={() => {\n                                                                        this.setState({ openAddTrackingIdModal: true, lineItemCurrent: item })\n                                                                    }}\n                                                                />\n                                                            )}\n                                                            <a href={item.trackingUrl} target=\"blank\" children={item.trackingNumber} />\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </Card>\n                        <Card\n                            style={{ marginBottom: \"20px\" }}\n                            title={<Text className={cls.bold}> Order logs </Text>}\n                            headStyle={{ color: 'rgba(0, 0, 0, 0.45)' }}\n                            bodyStyle={{ paddingBottom: '12px' }}\n                            loading={loading}\n                        >\n                            {renderTimeline()}\n                        </Card>\n                    </Col>\n                    <Col md={8} xs={24}>\n                        <Card\n                            style={{ marginBottom: \"20px\" }}\n                            title={<Text className={cls.bold}> <EditOutlined /> Notes </Text>}\n                            headStyle={{ color: 'rgba(0, 0, 0, 0.45)' }}\n                            bodyStyle={{ paddingBottom: '12px' }}\n                            // extra={\n                            //     <Button\n                            //         type=\"link\"\n                            //         icon={<EditOutlined />}\n                            //         style={{ marginRight: '16px' }}\n                            //         size={isMobile ? 'small' : 'middle'}\n                            //         onClick={() => this.setState({ openEditNoteModal: true })}\n                            //     >\n                            //         Edit\n                            // </Button>\n                            // }\n                            loading={loading}\n                        >\n                            <p>{order.note}</p>\n                        </Card>\n                        <Card\n                            style={{ marginBottom: \"20px\" }}\n                            title={<Text className={cls.bold}> <FileTextOutlined /> Order information </Text>}\n                            headStyle={{ color: 'rgba(0, 0, 0, 0.45)' }}\n                            bodyStyle={{ paddingBottom: '12px' }}\n                            loading={loading}\n                        >\n                            <div className={cls.description}>\n                                <p className={cls.title}>Order status:</p>\n                                <span>{order.status && this.checkStatusOrder(order)}</span>\n                            </div>\n                            <div className={cls.description}>\n                                <p className={cls.title}>Total orders:</p>\n                                <span>{(parseFloat(order.total) || 0).toLocaleString('en-US', { style: 'currency', currency: order.currency || 'USD' })}</span>\n                            </div>\n                        </Card>\n                        <Card\n                            style={{ marginBottom: \"20px\" }}\n                            title={<Text className={cls.bold}><SolutionOutlined /> Seller information </Text>}\n                            headStyle={{ color: 'rgba(0, 0, 0, 0.45)' }}\n                            bodyStyle={{ paddingBottom: '12px' }}\n                            loading={loading}\n                        >\n                            <div className={cls.description}>\n                                <p className={cls.title}>Seller name:</p>\n                                <span>{user.firstName + \" \" + user.lastName}</span>\n                            </div>\n                            <div className={cls.description}>\n                                <p className={cls.title}>Email:</p>\n                                <span>{order.sellerEmail}</span>\n                            </div>\n                            <div className={cls.description}>\n                                <p className={cls.title}>Seller plan:</p>\n                                <span>{order.sellerPlan}</span>\n                            </div>\n                        </Card>\n                        <Card\n                            style={{ marginBottom: \"20px\" }}\n                            title={<Text className={cls.bold}><ShopOutlined /> Store information </Text>}\n                            headStyle={{ color: 'rgba(0, 0, 0, 0.45)' }}\n                            bodyStyle={{ paddingBottom: '12px' }}\n                            loading={loading}\n\n                        >\n                            <div className={cls.description}>\n                                <p className={cls.title}>Site:</p>\n                                <span>{order && order.site && order.site.url && order.site.virtual ? \"Virtual site\" : <a target='blank' href={(order.site || { url: \"\" }).url}>{(order.site || { title: \"\" }).title}</a>}</span>\n                            </div>\n                            <div className={cls.description}>\n                                <p className={cls.title}>Platform:</p>\n                                <span>{order && order.site && order.site.siteType === \"WOO\" ? \"Woo Commerce\" : \"Shoplify\"}</span>\n                            </div>\n                        </Card>\n                        <Card\n                            style={{ marginBottom: \"20px\" }}\n                            title={<Text className={cls.bold}><ContactsOutlined /> Customer information </Text>}\n                            headStyle={{ color: 'rgba(0, 0, 0, 0.45)' }}\n                            bodyStyle={{ paddingBottom: '12px' }}\n                            loading={loading}\n                        >\n                            <div className={cls.description}>\n                                <p className={cls.title}>Customer:</p>\n                                <span>{order.billingAddress && (order.billingAddress.firstName || '' + \" \" + order.billingAddress.lastName || '')}</span>\n                            </div>\n                            <div className={cls.description}>\n                                <p className={cls.title}>Email:</p>\n                                <span>{order.billingAddress && order.billingAddress.email}</span>\n                            </div>\n                        </Card>\n                        <Card\n                            style={{ marginBottom: \"20px\" }}\n                            title={<Text className={cls.bold}><ShoppingCartOutlined /> Shipping information </Text>}\n                            headStyle={{ color: 'rgba(0, 0, 0, 0.45)' }}\n                            bodyStyle={{ paddingBottom: '12px' }}\n                            extra={\n                                <Button\n                                    type=\"link\"\n                                    icon={<EditOutlined />}\n                                    size={isMobile ? 'small' : 'middle'}\n                                    onClick={() => this.setState({ openEditShippingModal: true })}\n                                >\n                                    Edit\n                                </Button>\n                            }\n                            loading={loading}\n\n                        >\n                            <div className={cls.description}>\n                                <p className={cls.title}>Fullname:</p>\n                                <span>\n                                    {order && order.shippingAddress && order.shippingAddress.firstName && order.shippingAddress.lastName &&\n                                        order.shippingAddress.firstName + \" \" + order.shippingAddress.lastName}\n                                </span>\n                            </div>\n                            <div className={cls.description}>\n                                <p className={cls.title}>Address:</p>\n                                <span>\n                                    {order && order.shippingAddress && (order.shippingAddress.address1 || \"\") + \" \" + (order.shippingAddress.address2 || \"\")}\n                                </span>\n                            </div>\n                            <div className={cls.description}>\n                                <p className={cls.title}>Company:</p>\n                                <span>{order && order.shippingAddress && order.shippingAddress.company}</span>\n                            </div>\n                            <div className={cls.description}>\n                                <p className={cls.title}>Zip:</p>\n                                <span>{order && order.shippingAddress && order.shippingAddress.postcode}</span>\n                            </div>\n                            <div className={cls.description}>\n                                <p className={cls.title}>State/Province code:</p>\n                                <span>{order && order.shippingAddress && order.shippingAddress.province}</span>\n                            </div>\n                            <div className={cls.description}>\n                                <p className={cls.title}>Country code:</p>\n                                <span>{order && order.shippingAddress && order.shippingAddress.country}</span>\n                            </div>\n                            <div className={cls.description}>\n                                <p className={cls.title}>Phone Number:</p>\n                                <span>{order.billingAddress && order.billingAddress.phone}</span>\n                            </div>\n                        </Card>\n                    </Col>\n                </Row>\n                <PrintDesignDrawer\n                    visible={openPrintDesignDrawer}\n                    onClose={() => this.setState({ openPrintDesignDrawer: false, lineItemCurrent: {} })}\n                    lineItemCurrent={lineItemCurrent}\n                    saveImageDesign={saveImageDesign}\n                    doSaveImageDesign={doSaveImageDesign}\n                    saveImageDesignSuccess={saveImageDesignSuccess}\n                    saveImageDesignError={saveImageDesignError}\n                />\n                <EditShippingOrder\n                    visible={openEditShippingModal}\n                    handleCancel={() => this.setState({ openEditShippingModal: false })}\n                    order={order}\n                    editShipping={editShipping}\n                    editShippingSuccess={editShippingSuccess}\n                    editShippingError={editShippingError}\n                    doEditShipping={doEditShipping}\n                />\n                {/* <EditNoteOrder\n                    visible={openEditNoteModal}\n                    handleCancel={() => this.setState({ openEditNoteModal: false })}\n                    order={order}\n                    editNote={editNote}\n                    editNoteSuccess={editNoteSuccess}\n                    editNoteError={editNoteError}\n                    doEditNote={doEditNote}\n                /> */}\n                <SetActionRequiredModal\n                    visible={openModalSetActionRequired}\n                    handleCancel={() => this.setState({ openModalSetActionRequired: false })}\n                    nestedRowsSelected={rowsSelected}\n                    setActionRequiredLoading={setActionRequiredLoading}\n                    setActionRequired={setActionRequired}\n                />\n                <RefundOrder\n                    visible={openModalRefund}\n                    handleCancel={() => this.setState({ openModalRefund: false })}\n                    refund={refund}\n                    refundLoading={refundLoading}\n                    nestedRowsSelected={rowsSelected}\n                // lineItem={lineItemCurrent}\n                />\n                {/* <ResendModal\n                    visible={openModalResend}\n                    handleCancel={() => this.setState({ openModalResend: false })}\n                    nestedRowsSelected={rowsSelected}\n                    // lineItem={lineItemCurrent}\n                    resend={resend}\n                    resendLoading={resendLoading}\n                /> */}\n                <AssignSupplier\n                    visible={openModalAssignSupplier}\n                    handleCancel={() => this.setState({ openModalAssignSupplier: false })}\n                    lineItem={lineItemCurrent}\n                    assignSupplier={assignSupplier}\n                    assignSupplierLoading={assignSupplierLoading}\n                    suppliers={listSuppliersAssign}\n                />\n                <AssignCarrierModal\n                    visible={openModalAssignCarrier}\n                    handleCancel={() => this.setState({ openModalAssignCarrier: false })}\n                    lineItem={lineItemCurrent}\n                    listCarriesNoPaging={carriersAssign}\n                    assignCarrier={assignCarrier}\n                    assignCarrierLoading={assignCarrierLoading}\n                />\n                <AddTrackingIdModal\n                    visible={openAddTrackingIdModal}\n                    handleCancel={() => this.setState({ openAddTrackingIdModal: false, lineItemCurrent: null })}\n                    lineItem={lineItemCurrent}\n                    addTrackingId={addTrackingId}\n                    addTrackingIdLoading={addTrackingIdLoading}\n                />\n            </>\n        )\n    }\n}\n","import { connect } from 'react-redux';\n\nimport { OrdersActions, CarriesActions } from '../../redux/actions';\nimport OrderDetail from '../../views/OrderDetail/OrderDetail';\nconst mapStateToProps = state => ({\n    oneOrder: state.toJS().orders.oneOrder,\n\n    doSaveImageDesign: state.toJS().orders.doSaveImageDesign,\n    saveImageDesignSuccess: state.toJS().orders.saveImageDesignSuccess,\n    saveImageDesignError: state.toJS().orders.saveImageDesignError,\n\n    // editNote: state.toJS().orders.editNote,\n    // editNoteSuccess: state.toJS().orders.editNoteSuccess,\n    // editNoteError: state.toJS().orders.editNoteError,\n    editShipping: state.toJS().orders.editShipping,\n    editShippingSuccess: state.toJS().orders.editShippingSuccess,\n    editShippingError: state.toJS().orders.editShippingError,\n\n    oneUser: state.toJS().orders.oneUser,\n\n    setActionRequiredLoading: state.toJS().orders.setActionRequiredLoading,\n    setActionRequiredSuccess: state.toJS().orders.setActionRequiredSuccess,\n    setActionRequiredError: state.toJS().orders.setActionRequiredError,\n\n    refundLoading: state.toJS().orders.refundLoading,\n    refundSuccess: state.toJS().orders.refundSuccess,\n    refundError: state.toJS().orders.refundError,\n\n    resendLoading: state.toJS().orders.resendLoading,\n    resendSuccess: state.toJS().orders.resendSuccess,\n    resendError: state.toJS().orders.resendError,\n\n    listSuppliers: state.toJS().orders.listSuppliers,\n    assignSupplierLoading: state.toJS().orders.assignSupplierLoading,\n    assignSupplierSuccess: state.toJS().orders.assignSupplierSuccess,\n    assignSupplierError: state.toJS().orders.assignSupplierError,\n\n    listCarriesNoPaging: state.toJS().carries.listCarriesNoPaging,\n    assignCarrierLoading: state.toJS().orders.assignCarrierLoading,\n    assignCarrierSuccess: state.toJS().orders.assignCarrierSuccess,\n    assignCarrierError: state.toJS().orders.assignCarrierError,\n\n    suppliersAssign: state.toJS().orders.suppliersAssign,\n\n    addTrackingIdLoading: state.toJS().orders.addTrackingIdLoading,\n    addTrackingIdSuccess: state.toJS().orders.addTrackingIdSuccess,\n    addTrackingIdError: state.toJS().orders.addTrackingIdError,\n\n    carriersAssign: state.toJS().orders.carriersAssign,\n\n})\n\nconst mapDispatchToProps =  dispatch => ({\n    fetchOneOrder : id => {\n        dispatch(OrdersActions.fetchOneOrder(id))\n    },\n    saveImageDesign: value => {\n        dispatch(OrdersActions.saveImageDesign(value))\n    },\n    // doEditNote: body => {\n    //     dispatch(OrdersActions.doEditNote(body))\n    // }\n    doEditShipping: body => {\n        dispatch(OrdersActions.doEditShipping(body))\n    },\n    fetchOneUser: email => {\n        dispatch(OrdersActions.fetchOneUser(email))\n    },\n    setActionRequired: data => {\n        dispatch(OrdersActions.setActionRequired(data))\n    },\n    refund: data => {\n        dispatch(OrdersActions.refund(data))\n    },\n    resend: data => {\n        dispatch(OrdersActions.resend(data))\n    },\n    assignSupplier: data => {\n        dispatch(OrdersActions.assignSupplier(data))\n    },\n    assignCarrier: data => {\n        dispatch(OrdersActions.assignCarrier(data))\n    },\n    getAllSupplier: () => {\n        dispatch(OrdersActions.getAllSupplier())\n    },\n    fetchAllCarriesNoPaging: () => {\n        dispatch(CarriesActions.fetchAllCarriesNoPaging())\n    },\n    getAssignSupplier: id => {\n        dispatch(OrdersActions.getAssignSupplier(id))\n    },\n    addTrackingId: params => {\n        dispatch(OrdersActions.addTrackingId(params))\n    },\n    getAssignCarrier: id => {\n        dispatch(OrdersActions.getAssignCarrier(id))\n    },\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetail)"],"sourceRoot":""}