{"version":3,"sources":["../node_modules/antd/es/layout/style/index.js","../node_modules/antd/es/layout/index.js","../node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","../node_modules/@ant-design/icons/es/icons/LockOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","../node_modules/@ant-design/icons/es/icons/UserOutlined.js","views/Login/login.module.less","assets/logo2.svg","views/Login/Register.js","views/Login/Login.js","views/Login/ForgotPass.js","views/Login/index.js","containers/Login/LoginContainer.js"],"names":["Layout","Sider","LockOutlined","props","ref","React","AntdIcon","Object","assign","icon","LockOutlinedSvg","displayName","UserOutlined","UserOutlinedSvg","module","exports","Component","Login","onFinish","values","remember","login","this","auth","error","history","loading","name","className","initialValues","Item","message","CatchError","type","showIcon","style","textAlign","rules","required","size","prefix","placeholder","min","marginBottom","valuePropName","cls","htmlType","loginBtn","Content","Footer","Auth","TabPane","callback","key","register","match","forgotPass","_","get","localStorage","id_token","window","location","href","wrap","contentWrap","title","src","logo2","content","connect","state","toJS","dispatch","params","AuthActions"],"mappings":"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","file":"static/js/21.5bb8cd0c.chunk.js","sourcesContent":["import '../../style/index.less';\nimport './index.less';","import Layout from './layout';\nimport Sider from './Sider';\nLayout.Sider = Sider;\nexport default Layout;","// This icon file is generated automatically.\nvar LockOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" } }] }, \"name\": \"lock\", \"theme\": \"outlined\" };\nexport default LockOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockOutlined = function LockOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\n\nLockOutlined.displayName = 'LockOutlined';\nexport default React.forwardRef(LockOutlined);","// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UserOutlined = function UserOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\n\nUserOutlined.displayName = 'UserOutlined';\nexport default React.forwardRef(UserOutlined);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"wrap--1wG_a\",\"lang\":\"lang--3eEjd\",\"contentWrap\":\"contentWrap--1gQvz\",\"title\":\"title--30cad\",\"content\":\"content--1Twnn\",\"forgot\":\"forgot--3NrOg\",\"remember\":\"remember--1ec2e\",\"loginBtn\":\"loginBtn--4fxKG\"};","module.exports = __webpack_public_path__ + \"static/media/logo2.9cf2e298.svg\";","import React, {Component} from 'react';\nimport {Alert, Button, Form, Input, message, Result} from \"antd\";\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\nimport CatchError from \"../../core/util/CatchError\";\nimport cls from \"./login.module.less\";\n\n\nclass Register extends Component {\n\n    onFinish = (values) => {\n        // console.log(values);\n        this.props.register(values);\n    };\n\n    render() {\n\n        const {auth} = this.props;\n\n        return (\n            <Form\n                name=\"register\"\n                className=\"login-form\"\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={this.onFinish}\n            >\n                {\n                    auth.registerSuccess ? (\n                        <Result\n                            status=\"success\"\n                            title=\"Successfully\"\n                            subTitle='Please go to your email to verify account'\n                            extra={[\n                                <Button type=\"link\"\n                                        style={{float: 'none'}}\n                                        className={cls.forgot}\n                                        onClick={() => window.location.href = '/login'}>\n                                    Back to Login\n                                </Button>,\n                            ]}\n                            style={{padding: '32px'}}\n                        />\n                    ) : (\n                        <>\n                            {\n                                auth.registerError && (\n                                    <Form.Item>\n                                        <Alert message={CatchError[auth.registerError] || auth.registerError}\n                                               type=\"error\" showIcon\n                                               style={{textAlign: 'left'}}/>\n                                    </Form.Item>\n                                )\n                            }\n                            <Form.Item\n                                name=\"email\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input correct email!',\n                                        type: 'email'\n                                    },\n                                ]}\n                                style={{textAlign: 'left'}}\n                            >\n                                <Input size='large' prefix={<UserOutlined className=\"site-form-item-icon\"/>}\n                                       placeholder=\"Email\"/>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"password\"\n                                style={{textAlign: 'left'}}\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your password! (at least 5 characters)',\n                                        min: 5\n                                    },\n                                ]}\n                            >\n                                <Input.Password\n                                    size='large'\n                                    prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"firstName\"\n                                style={{textAlign: 'left'}}\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your first name!',\n                                    },\n                                ]}\n                            >\n                                <Input\n                                    size='large'\n                                    prefix={<UserOutlined className=\"site-form-item-icon\"/>}\n                                    placeholder=\"First Name\"\n                                />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"lastName\"\n                                style={{textAlign: 'left'}}\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your last name!',\n                                    },\n                                ]}\n                            >\n                                <Input\n                                    size='large'\n                                    prefix={<UserOutlined className=\"site-form-item-icon\"/>}\n                                    placeholder=\"Last Name\"\n                                />\n                            </Form.Item>\n                            {/*<Form.Item style={{textAlign: 'left'}}>*/}\n                            {/*   <span>*/}\n                            {/*        By clicking on “Create Account”,*/}\n                            {/*       I agree to the Ecomdy <a>Terms of Service</a> and <a>Privacy Policy</a>.*/}\n                            {/*   </span>*/}\n                            {/*</Form.Item>*/}\n                            <br/>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" className={cls.loginBtn} size='large'\n                                        loading={auth.registerLoading}>\n                                    Create Account\n                                </Button>\n                            </Form.Item>\n                        </>\n                    )\n                }\n\n            </Form>\n        );\n    }\n}\n\nRegister.propTypes = {};\n\nexport default Register;\n","import React, {Component} from 'react';\nimport {Button, Checkbox, Form, Input, Alert} from \"antd\";\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\nimport cls from \"./login.module.less\";\nimport CatchError from \"../../core/util/CatchError\";\nimport ForgotPass from \"./ForgotPass\";\n\nclass Login extends Component {\n\n    onFinish = (values) => {\n        delete values.remember;\n        // console.log(values);\n        const {login} = this.props;\n        login(values);\n    };\n\n    render() {\n\n        const {auth, history} = this.props;\n        const {error, loading} = auth;\n\n\n        return <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={this.onFinish}\n        >\n            {\n                error && (\n                    <Form.Item>\n                        <Alert message={CatchError[error] || error} type=\"error\" showIcon\n                               style={{textAlign: 'left'}}/>\n                    </Form.Item>\n                )\n            }\n            <Form.Item\n                name=\"email\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input correct email!',\n                        type: 'email'\n                    },\n                ]}\n                style={{textAlign: 'left'}}\n            >\n                <Input size='large' prefix={<UserOutlined className=\"site-form-item-icon\"/>}\n                       placeholder=\"Email\"/>\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                style={{textAlign: 'left'}}\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password! (at least 5 characters)',\n                        min: 5\n                    },\n                ]}\n            >\n                <Input\n                    size='large'\n                    prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n            </Form.Item>\n            <Form.Item style={{marginBottom: '5px'}}>\n                <Form.Item name=\"remember\" valuePropName=\"\" className={cls.remember}>\n                    <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n                {/*<Button className={cls.forgot} type='link' onClick={() => history.push('/forgot')}>*/}\n                {/*    Forgot password?*/}\n                {/*</Button>*/}\n            </Form.Item>\n\n            <Form.Item>\n                <Button size='large' type=\"primary\" htmlType=\"submit\" className={cls.loginBtn} loading={loading}>\n                    Log in\n                </Button>\n            </Form.Item>\n        </Form>;\n    }\n}\n\nLogin.propTypes = {};\n\nexport default Login;\n","import React, {Component} from 'react';\nimport {Alert, Button, Checkbox, Form, Input, Result} from \"antd\";\nimport {UserOutlined} from \"@ant-design/icons\";\nimport CatchError from \"../../core/util/CatchError\";\nimport cls from \"./login.module.less\";\n\n\nclass ForgotPass extends Component {\n\n    onFinish = (values) => {\n        // console.log(values);\n        this.props.forgotPass(values);\n    };\n\n    render() {\n\n        const {auth, history} = this.props;\n\n        return (\n            <Form\n                name=\"for\"\n                className=\"login-form\"\n                initialValues={{\n                    // remember: true,\n                }}\n                onFinish={this.onFinish}\n            >\n                {\n                    auth.forgotSuccess ? (\n                        <Result\n                            status=\"success\"\n                            title=\"Successfully\"\n                            subTitle={`An authentication link has been sent to your email. Please check your mailbox to activate your account!`}\n                            extra={[\n                                <Button type=\"primary\"\n                                        onClick={() => window.location.href = '/login'}>\n                                    Login\n                                </Button>,\n                            ]}\n                            style={{padding: '32px'}}\n                        />\n                    ) : (\n                        <>\n                            <Form.Item style={{textAlign: 'center', marginBottom: 0, marginTop: '40px'}}>\n                                <h2>\n                                    Forgot Password\n                                </h2>\n                            </Form.Item>\n                            <Form.Item style={{textAlign: 'center'}}>\n                               <span>\n                                    Enter the email address associated with your account to reset your password\n                               </span>\n                            </Form.Item>\n                            {\n                                auth.forgotError && (\n                                    <Form.Item>\n                                        <Alert message={CatchError[auth.forgotError] || auth.forgotError}\n                                               type=\"error\" showIcon\n                                               style={{textAlign: 'left'}}/>\n                                    </Form.Item>\n                                )\n                            }\n                            <Form.Item\n                                name=\"email\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input correct email!',\n                                        type: 'email'\n                                    },\n                                ]}\n                                style={{textAlign: 'left'}}\n                            >\n                                <Input size='large' prefix={<UserOutlined className=\"site-form-item-icon\"/>}\n                                       placeholder=\"Your email\"/>\n                            </Form.Item>\n                            <br/>\n                            <Form.Item style={{marginBottom: '10px'}}>\n                                <Button type=\"primary\" htmlType=\"submit\" className={cls.loginBtn} size='large'\n                                        loading={auth.forgotLoading}>\n                                    Send\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button className={cls.forgot}\n                                        type='link'\n                                        onClick={() => history.push('/login')}>\n                                    Back to LogIn?\n                                </Button>\n                            </Form.Item>\n                        </>\n                    )\n                }\n\n            </Form>\n        );\n    }\n}\n\nForgotPass.propTypes = {};\n\nexport default ForgotPass;\n","import React, {Component} from 'react';\n// import SelectLang from \"../../components/SelectLang\";\nimport {Layout, Tabs} from \"antd\";\nimport logo2 from '../../assets/logo2.svg';\nimport cls from './login.module.less';\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport _ from \"lodash\";\nimport ForgotPass from \"./ForgotPass\";\n\nconst {Content, Footer} = Layout;\nconst {TabPane} = Tabs;\n\n\nclass Auth extends Component {\n\n    callback = (key) => {\n        // console.log(key);\n    };\n\n    render() {\n\n        const {login, register, auth, match, history, forgotPass} = this.props;\n\n\n        const token = _.get(auth, 'id_token');\n        if (token || localStorage.id_token) {\n            window.location.href = '/';\n        }\n\n        return (\n            <Layout className={cls.wrap}>\n                {/*<Header style={{backgroundColor: 'transparent'}}>*/}\n                {/*    <div className={cls.lang}>*/}\n                {/*        <SelectLang/>*/}\n                {/*    </div>*/}\n                {/*</Header>*/}\n                <Content className={cls.contentWrap}>\n                    <div className={cls.title}>\n                        <img src={logo2}/>\n                    </div>\n                    <div className={cls.content}>\n                        {/*{*/}\n                        {/*    match && match.path && match.path === '/forgot' ? (*/}\n                        {/*        <ForgotPass auth={auth} forgotPass={forgotPass} history={history}/>*/}\n                        {/*    ) : (*/}\n                        {/*        <Tabs defaultActiveKey=\"1\" onChange={this.callback} animated={false}*/}\n                        {/*              style={{textAlign: 'center'}} size='large'>*/}\n                        {/*            <TabPane tab=\"Login\" key=\"1\">*/}\n                        {/*                <Login login={login} auth={auth} match={match} history={history}/>*/}\n                        {/*            </TabPane>*/}\n                        {/*            <TabPane tab=\"Register\" key=\"2\">*/}\n                        {/*                <Register auth={auth} register={register}/>*/}\n                        {/*            </TabPane>*/}\n                        {/*        </Tabs>*/}\n                        {/*    )*/}\n                        {/*}*/}\n                        <Login login={login} auth={auth} match={match} history={history}/>\n                    </div>\n                </Content>\n                <Footer style={{textAlign: 'center'}}>\n                    Copyright © 2020 PrintWay. <span>All rights reserved.</span>\n                </Footer>\n            </Layout>\n        );\n    }\n}\n\nexport default Auth;\n","import {connect} from 'react-redux';\nimport Login from '../../views/Login/index.js';\nimport {AuthActions} from '../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n    auth: state.toJS().auth,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    login: (params) => dispatch(AuthActions.login(params)),\n    register: (params) => dispatch(AuthActions.register(params)),\n    forgotPass: (params) => dispatch(AuthActions.forgotPass(params)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Login);\n"],"sourceRoot":""}