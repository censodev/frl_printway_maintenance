{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","../node_modules/@ant-design/icons/es/icons/UserOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/FileTextOutlined.js","../node_modules/@ant-design/icons/es/icons/FileTextOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/BellOutlined.js","../node_modules/@ant-design/icons/es/icons/BellOutlined.js","views/ContentSetting/ContentSetting.js","views/ContentSetting/LevelContentSetting.js","views/ContentSetting/index.js","containers/ContentSetting/ContentSettingContainer.js"],"names":["UserOutlined","props","ref","React","AntdIcon","Object","assign","icon","UserOutlinedSvg","displayName","FileTextOutlined","FileTextOutlinedSvg","BellOutlined","BellOutlinedSvg","TabPane","ContentSetting","formRef","createRef","handleData","listContentSetting","data","settings","map","value","key","onFinish","values","editContentSetting","keys","this","editContentLoading","_","layout","initialValues","PENDING_DESIGN_6_HOURS","PENDING_DESIGN_24_HOURS","PENDING_DESIGN_48_HOURS","PENDING_DESIGN_72_HOURS","ACTION_REQUIRED_6_HOURS","ACTION_REQUIRED_24_HOURS","ACTION_REQUIRED_48_HOURS","ACTION_REQUIRED_72_HOURS","NEED_PAY_6_HOURS","NEED_PAY_24_HOURS","NEED_PAY_48_HOURS","NEED_PAY_72_HOURS","defaultActiveKey","tabPosition","tab","Item","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","name","label","style","fontWeight","onChange","evt","current","setFieldsValue","editor","getData","config","extraPlugins","onBeforeLoad","CKEDITOR","disableAutoInline","marginLeft","width","SaveOutlined","type","htmlType","block","loading","Component","form","SELLER_NEXT_LEVEL","Content","state","callback","fetchAllContentSetting","nextProps","editContentSuccess","editContentError","message","success","error","content","CatchError","title","marginRight","headStyle","color","animated","fontSize","LevelContentSetting","connect","toJS","contentSetting","dispatch","ContentSettingActions","params"],"mappings":"whBAEeA,EADI,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,6qBAAirB,KAAQ,OAAQ,MAAS,Y,QCKh2BA,EAAe,SAAsBC,EAAOC,GAC9C,OAAOC,gBAAoBC,IAAUC,OAAOC,OAAO,GAAIL,EAAO,CAC5DC,IAAKA,EACLK,KAAMC,MAIVR,EAAaS,YAAc,eACZN,iBAAiBH,I,4CCZjBU,EADQ,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,kaAAsa,KAAQ,YAAa,MAAS,Y,QCK9lBA,EAAmB,SAA0BT,EAAOC,GACtD,OAAOC,gBAAoBC,IAAUC,OAAOC,OAAO,GAAIL,EAAO,CAC5DC,IAAKA,EACLK,KAAMI,MAIVD,EAAiBD,YAAc,mBAChBN,iBAAiBO,I,4CCZjBE,EADI,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,sbAA0b,KAAQ,OAAQ,MAAS,Y,QCKzmBA,EAAe,SAAsBX,EAAOC,GAC9C,OAAOC,gBAAoBC,IAAUC,OAAOC,OAAO,GAAIL,EAAO,CAC5DC,IAAKA,EACLK,KAAMM,MAIVD,EAAaH,YAAc,eACZN,iBAAiBS,I,4RCRzBE,E,IAAAA,QA+XQC,E,4MA3XXC,QAAUb,IAAMc,Y,EAEhBC,WAAa,WAAO,IACTC,EAAsB,EAAKlB,MAA3BkB,mBACHC,EAAO,GAMX,OALAD,GACGA,EAAmBE,SAASC,KAAI,SAAAC,GAC/B,OAAOH,EAAKG,EAAMC,KAAOD,EAAMA,SAG5BH,G,EAGXK,SAAW,SAACC,IAURC,EAP6B,EAAK1B,MAA3B0B,oBAEUtB,OAAOuB,KAAKF,GAAQJ,KAAI,SAAAE,GAAG,MAAK,CAC7CA,IAAKA,EACLD,MAAOG,EAAOF,S,uDAQZ,IAAD,OAECJ,EAAOS,KAAKX,aACXY,EAAsBD,KAAK5B,MAA3B6B,mBAGP,OACKC,UAAUX,IACP,uBACIlB,IAAK2B,KAAKb,QACVgB,OAAO,WACPP,SAAUI,KAAKJ,SACfQ,cAAe,CACXC,uBAAwBH,MAAMX,EAAM,yBAA0B,IAC9De,wBAAyBJ,MAAMX,EAAM,0BAA2B,IAChEgB,wBAAyBL,MAAMX,EAAM,0BAA2B,IAChEiB,wBAAyBN,MAAMX,EAAM,0BAA2B,IAChEkB,wBAAyBP,MAAMX,EAAM,0BAA2B,IAChEmB,yBAA0BR,MAAMX,EAAM,2BAA4B,IAClEoB,yBAA0BT,MAAMX,EAAM,2BAA4B,IAClEqB,yBAA0BV,MAAMX,EAAM,2BAA4B,IAClEsB,iBAAkBX,MAAMX,EAAM,mBAAoB,IAClDuB,kBAAmBZ,MAAMX,EAAM,oBAAqB,IACpDwB,kBAAmBb,MAAMX,EAAM,oBAAqB,IACpDyB,kBAAmBd,MAAMX,EAAM,oBAAqB,MAIxD,uBAAM0B,iBAAiB,gBAAgBC,YAAY,QAC/C,kBAACjC,EAAD,CAASU,IAAG,gBAAmBwB,IAAI,kBAE/B,sBAAMC,KAAN,CACIC,SAAO,EACPC,aAAc,SAACC,EAAYC,GAAb,OAA+BD,EAAWjB,0BAA4BkB,EAAclB,2BAEjG,YAAsB,IAApBmB,EAAmB,EAAnBA,cACC,OAAO,sBAAML,KAAN,CACHM,KAAK,yBACLC,MAAM,gBACNC,MAAO,CAACC,WAAW,SAGnB,kBAAC,IAAD,CACIH,KAAK,yBACLnC,KAAMkC,EAAc,0BAEpBK,SAAU,SAACC,GAAD,OAAS,EAAK5C,QAAQ6C,QAAQC,eAAe,CAAC,uBAA0BF,EAAIG,OAAOC,aAC7FC,OAAQ,CACJC,aAAc,iBAMlC,6BACA,sBAAMjB,KAAN,CACIC,SAAO,EACPC,aAAc,SAACC,EAAYC,GAAb,OAA+BD,EAAWlB,yBAA2BmB,EAAcnB,0BAEhG,YAAsB,IAApBoB,EAAmB,EAAnBA,cACC,OAAO,sBAAML,KAAN,CACHM,KAAK,0BACLC,MAAM,iBACNC,MAAO,CAACC,WAAW,SAGnB,kBAAC,IAAD,CACIH,KAAK,0BACLnC,KAAMkC,EAAc,2BACpBa,aAAc,SAACC,GAAD,OAAeA,EAASC,mBAAoB,GAC1DV,SAAU,SAACC,GAAD,OAAS,EAAK5C,QAAQ6C,QAAQC,eAAe,CAAC,wBAA2BF,EAAIG,OAAOC,aAC9FC,OAAQ,CACJC,aAAc,iBAMlC,6BACA,sBAAMjB,KAAN,CACIC,SAAO,EACPC,aAAc,SAACC,EAAYC,GAAb,OAA+BD,EAAWf,0BAA4BgB,EAAchB,2BAEjG,YAAsB,IAApBiB,EAAmB,EAAnBA,cACC,OAAO,sBAAML,KAAN,CACHM,KAAK,0BACLC,MAAM,iBACNC,MAAO,CAACC,WAAW,SAGnB,kBAAC,IAAD,CACIH,KAAK,0BACLnC,KAAMkC,EAAc,2BACpBa,aAAc,SAACC,GAAD,OAAeA,EAASC,mBAAoB,GAC1DV,SAAU,SAACC,GAAD,OAAS,EAAK5C,QAAQ6C,QAAQC,eAAe,CAAC,wBAA2BF,EAAIG,OAAOC,aAC9FC,OAAQ,CACJC,aAAc,iBAMlC,6BACA,sBAAMjB,KAAN,CACIC,SAAO,EACPC,aAAc,SAACC,EAAYC,GAAb,OAA+BD,EAAWhB,0BAA4BiB,EAAcjB,2BAEjG,YAAsB,IAApBkB,EAAmB,EAAnBA,cACC,OAAO,sBAAML,KAAN,CACHM,KAAK,0BACLC,MAAM,iBACNC,MAAO,CAACC,WAAW,SAGnB,kBAAC,IAAD,CACIH,KAAK,0BACLnC,KAAMkC,EAAc,2BACpBa,aAAc,SAACC,GAAD,OAAeA,EAASC,mBAAoB,GAC1DV,SAAU,SAACC,GAAD,OAAS,EAAK5C,QAAQ6C,QAAQC,eAAe,CAAC,wBAA2BF,EAAIG,OAAOC,aAC9FC,OAAQ,CACJC,aAAc,kBAQtC,kBAACpD,EAAD,CAASU,IAAG,iBAAoBwB,IAAI,mBAEhC,sBAAMC,KAAN,CACIC,SAAO,EACPC,aAAc,SAACC,EAAYC,GAAb,OAA+BD,EAAWb,2BAA6Bc,EAAcd,4BAElG,YAAsB,IAApBe,EAAmB,EAAnBA,cACC,OAAO,sBAAML,KAAN,CACHM,KAAK,0BACLC,MAAM,gBACNC,MAAO,CAACC,WAAW,SAGnB,kBAAC,IAAD,CACIH,KAAK,0BACLnC,KAAMkC,EAAc,2BAEpBK,SAAU,SAACC,GAAD,OAAS,EAAK5C,QAAQ6C,QAAQC,eAAe,CAAC,wBAA2BF,EAAIG,OAAOC,aAC9FC,OAAQ,CACJC,aAAc,iBAMlC,6BACA,sBAAMjB,KAAN,CACIC,SAAO,EACPC,aAAc,SAACC,EAAYC,GAAb,OAA+BD,EAAWd,0BAA4Be,EAAcf,2BAEjG,YAAsB,IAApBgB,EAAmB,EAAnBA,cACC,OAAO,sBAAML,KAAN,CACHM,KAAK,2BACLC,MAAM,iBACNC,MAAO,CAACC,WAAW,SAGnB,kBAAC,IAAD,CACIH,KAAK,2BACLnC,KAAMkC,EAAc,4BACpBa,aAAc,SAACC,GAAD,OAAeA,EAASC,mBAAoB,GAC1DV,SAAU,SAACC,GAAD,OAAS,EAAK5C,QAAQ6C,QAAQC,eAAe,CAAC,yBAA4BF,EAAIG,OAAOC,aAC/FC,OAAQ,CACJC,aAAc,iBAMlC,6BACA,sBAAMjB,KAAN,CACIC,SAAO,EACPC,aAAc,SAACC,EAAYC,GAAb,OAA+BD,EAAWX,2BAA6BY,EAAcZ,4BAElG,YAAsB,IAApBa,EAAmB,EAAnBA,cACC,OAAO,sBAAML,KAAN,CACHM,KAAK,2BACLC,MAAM,iBACNC,MAAO,CAACC,WAAW,SAGnB,kBAAC,IAAD,CACIH,KAAK,2BACLnC,KAAMkC,EAAc,4BACpBa,aAAc,SAACC,GAAD,OAAeA,EAASC,mBAAoB,GAC1DV,SAAU,SAACC,GAAD,OAAS,EAAK5C,QAAQ6C,QAAQC,eAAe,CAAC,yBAA4BF,EAAIG,OAAOC,aAC/FC,OAAQ,CACJC,aAAc,iBAMlC,6BACA,sBAAMjB,KAAN,CACIC,SAAO,EACPC,aAAc,SAACC,EAAYC,GAAb,OAA+BD,EAAWZ,2BAA6Ba,EAAcb,4BAElG,YAAsB,IAApBc,EAAmB,EAAnBA,cACC,OAAO,sBAAML,KAAN,CACHM,KAAK,2BACLC,MAAM,iBACNC,MAAO,CAACC,WAAW,SAGnB,kBAAC,IAAD,CACIH,KAAK,2BACLnC,KAAMkC,EAAc,4BACpBa,aAAc,SAACC,GAAD,OAAeA,EAASC,mBAAoB,GAC1DV,SAAU,SAACC,GAAD,OAAS,EAAK5C,QAAQ6C,QAAQC,eAAe,CAAC,yBAA4BF,EAAIG,OAAOC,aAC/FC,OAAQ,CACJC,aAAc,kBAQtC,kBAACpD,EAAD,CAASU,IAAG,UAAawB,IAAI,YAEzB,sBAAMC,KAAN,CACIC,SAAO,EACPC,aAAc,SAACC,EAAYC,GAAb,OAA+BD,EAAWT,oBAAsBU,EAAcV,qBAE3F,YAAsB,IAApBW,EAAmB,EAAnBA,cACC,OAAO,sBAAML,KAAN,CACHM,KAAK,mBACLC,MAAM,gBACNC,MAAO,CAACC,WAAW,SAGnB,kBAAC,IAAD,CACIH,KAAK,mBACLnC,KAAMkC,EAAc,oBACpBa,aAAc,SAACC,GAAD,OAAeA,EAASC,mBAAoB,GAC1DV,SAAU,SAACC,GAAD,OAAS,EAAK5C,QAAQ6C,QAAQC,eAAe,CAAC,iBAAoBF,EAAIG,OAAOC,aACvFC,OAAQ,CACJC,aAAc,iBAMlC,6BACA,sBAAMjB,KAAN,CACIC,SAAO,EACPC,aAAc,SAACC,EAAYC,GAAb,OAA+BD,EAAWV,mBAAqBW,EAAcX,oBAE1F,YAAsB,IAApBY,EAAmB,EAAnBA,cACC,OAAO,sBAAML,KAAN,CACHM,KAAK,oBACLC,MAAM,iBACNC,MAAO,CAACC,WAAW,SAGnB,kBAAC,IAAD,CACIH,KAAK,oBACLnC,KAAMkC,EAAc,qBACpBa,aAAc,SAACC,GAAD,OAAeA,EAASC,mBAAoB,GAC1DV,SAAU,SAACC,GAAD,OAAS,EAAK5C,QAAQ6C,QAAQC,eAAe,CAAC,kBAAqBF,EAAIG,OAAOC,aACxFC,OAAQ,CACJC,aAAc,iBAMlC,6BACA,sBAAMjB,KAAN,CACIC,SAAO,EACPC,aAAc,SAACC,EAAYC,GAAb,OAA+BD,EAAWP,oBAAsBQ,EAAcR,qBAE3F,YAAsB,IAApBS,EAAmB,EAAnBA,cACC,OAAO,sBAAML,KAAN,CACHM,KAAK,oBACLC,MAAM,iBACNC,MAAO,CAACC,WAAW,SAGnB,kBAAC,IAAD,CACIH,KAAK,oBACLnC,KAAMkC,EAAc,qBACpBa,aAAc,SAACC,GAAD,OAAeA,EAASC,mBAAoB,GAC1DV,SAAU,SAACC,GAAD,OAAS,EAAK5C,QAAQ6C,QAAQC,eAAe,CAAC,kBAAqBF,EAAIG,OAAOC,aACxFC,OAAQ,CACJC,aAAc,iBAMlC,6BACA,sBAAMjB,KAAN,CACIC,SAAO,EACPC,aAAc,SAACC,EAAYC,GAAb,OAA+BD,EAAWR,oBAAsBS,EAAcT,qBAE3F,YAAsB,IAApBU,EAAmB,EAAnBA,cACC,OAAO,sBAAML,KAAN,CACHM,KAAK,oBACLC,MAAM,iBACNC,MAAO,CAACC,WAAW,SAGnB,kBAAC,IAAD,CACIH,KAAK,oBACLnC,KAAMkC,EAAc,qBACpBa,aAAc,SAACC,GAAD,OAAeA,EAASC,mBAAoB,GAC1DV,SAAU,SAACC,GAAD,OAAS,EAAK5C,QAAQ6C,QAAQC,eAAe,CAAC,kBAAqBF,EAAIG,OAAOC,aACxFC,OAAQ,CACJC,aAAc,mBAS1C,6BACA,uBAAKT,MAAO,CAACa,WAAY,MACrB,sBAAMrB,KAAN,CAAWQ,MAAO,CAACc,MAAO,SACtB,uBACIhE,KAAM,kBAACiE,EAAA,EAAD,MACNC,KAAK,UACLC,SAAS,SACTC,OAAK,EACLC,QAAS9C,GALb,e,GAxWC+C,aCyFd9D,E,4MAzFX+D,KAAO3E,IAAMc,Y,EAEbC,WAAa,WAAO,IACTC,EAAsB,EAAKlB,MAA3BkB,mBACHC,EAAO,GAMX,OALAD,GACGA,EAAmBE,SAASC,KAAI,SAAAC,GAC/B,OAAOH,EAAKG,EAAMC,KAAOD,EAAMA,SAG5BH,G,EAGXK,SAAW,SAACC,IAURC,EAP6B,EAAK1B,MAA3B0B,oBAEUtB,OAAOuB,KAAKF,GAAQJ,KAAI,SAAAE,GAAG,MAAK,CAC7CA,IAAKA,EACLD,MAAOG,EAAOF,S,uDAOZ,IAAD,OAECJ,EAAOS,KAAKX,aACXY,EAAsBD,KAAK5B,MAA3B6B,mBAEP,OAEKC,UAAUX,IACP,uBACIlB,IAAK2B,KAAKiD,KACV9C,OAAO,WACPP,SAAUI,KAAKJ,SACfQ,cAAe,CACX8C,kBAAmBhD,MAAMX,EAAM,oBAAqB,IACpDc,uBAAwBH,MAAMX,EAAM,yBAA0B,MAGlE,sBAAM6B,KAAN,CACIC,SAAO,EACPC,aAAc,SAACC,EAAYC,GAAb,OAA+BD,EAAWlB,yBAA2BmB,EAAcnB,0BAEhG,YAAsB,IAApBoB,EAAmB,EAAnBA,cACC,OAAO,sBAAML,KAAN,CACHM,KAAK,oBACLC,MAAM,UACNC,MAAO,CAACC,WAAY,SAGpB,kBAAC,IAAD,CACIH,KAAK,oBACLnC,KAAMkC,EAAc,qBACpBa,aAAc,SAACC,GAAD,OAAeA,EAASC,mBAAoB,GAC1DV,SAAU,SAACC,GAAD,OAAS,EAAKkB,KAAKjB,QAAQC,eAAe,CAAC,kBAAqBF,EAAIG,OAAOC,aACrFC,OAAQ,CACJC,aAAc,iBAMlC,6BACA,sBAAMjB,KAAN,KACI,uBACI1C,KAAM,kBAACiE,EAAA,EAAD,MACNC,KAAK,UACLC,SAAS,SACTC,OAAK,EACLC,QAAS9C,GALb,c,GAvEK+C,aCStB/D,E,IAAAA,QA0EQkE,E,4MArEXC,MAAQ,G,EA4BRC,SAAW,SAAC1D,K,kEAzBRK,KAAK5B,MAAMkF,2B,uDAGkBC,GAAY,IAAD,EAKpCvD,KAAK5B,MAFLoF,EAHoC,EAGpCA,mBACAC,EAJoC,EAIpCA,kBAIiC,IAAjCF,EAAUC,oBACPD,EAAUC,qBAAuBA,GAEpCE,EAAA,EAAQC,QAAQ,YAIhBJ,EAAUE,kBAAoBF,EAAUE,mBAAqBA,GAE7DC,EAAA,EAAQE,MAAM,CAACC,QAASC,EAAWP,EAAUE,mBAAqBF,EAAUE,qB,+BAU1E,IAAD,EAMDzD,KAAK5B,MAHL6B,EAHC,EAGDA,mBACAX,EAJC,EAIDA,mBACAQ,EALC,EAKDA,mBAGJ,OACI,uBACIiE,MAAO,8BAAM,kBAAClF,EAAA,EAAD,CAAkB+C,MAAO,CAACoC,YAAa,SAA7C,iBACPC,UAAW,CAACC,MAAO,wBAEnB,uBAAMjD,iBAAiB,IAAIa,SAAU9B,KAAKqD,SAAUc,UAAU,GAC1D,kBAAC,EAAD,CAAShD,IAAK,0BAAMS,MAAO,CAACwC,SAAU,KAAK,kBAACjG,EAAA,EAAD,MAA7B,wBAAyEwB,IAAI,KACvF,6BACA,kBAAC,EAAD,CACIM,mBAAoBA,EACpBX,mBAAoBA,EACpBQ,mBAAoBA,KAG5B,kBAAC,EAAD,CAASqB,IAAK,0BAAMS,MAAO,CAACwC,SAAU,KAAK,kBAACrF,EAAA,EAAD,MAA7B,6BAA8EY,IAAI,KAC5F,6BACA,kBAAC0E,EAAD,CACIpE,mBAAoBA,EACpBX,mBAAoBA,EACpBQ,mBAAoBA,W,GA9D1BkD,aCAPsB,uBAZS,SAAClB,GAAD,MAAY,CAChC9D,mBAAoB8D,EAAMmB,OAAOC,eAAelF,mBAChDW,mBAAoBmD,EAAMmB,OAAOC,eAAevE,mBAChDuD,mBAAoBJ,EAAMmB,OAAOC,eAAehB,mBAChDC,iBAAkBL,EAAMmB,OAAOC,eAAef,qBAGvB,SAACgB,GAAD,MAAe,CACtCnB,uBAAwB,kBAAMmB,EAASC,IAAsBpB,2BAC7DxD,mBAAoB,SAAC6E,GAAD,OAAYF,EAASC,IAAsB5E,mBAAmB6E,QAGvEL,CAGbnB","file":"static/js/31.40dd0e6d.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UserOutlined = function UserOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\n\nUserOutlined.displayName = 'UserOutlined';\nexport default React.forwardRef(UserOutlined);","// This icon file is generated automatically.\nvar FileTextOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494zM504 618H320c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM312 490v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H320c-4.4 0-8 3.6-8 8z\" } }] }, \"name\": \"file-text\", \"theme\": \"outlined\" };\nexport default FileTextOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FileTextOutlinedSvg from \"@ant-design/icons-svg/es/asn/FileTextOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar FileTextOutlined = function FileTextOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: FileTextOutlinedSvg\n  }));\n};\n\nFileTextOutlined.displayName = 'FileTextOutlined';\nexport default React.forwardRef(FileTextOutlined);","// This icon file is generated automatically.\nvar BellOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M816 768h-24V428c0-141.1-104.3-257.7-240-277.1V112c0-22.1-17.9-40-40-40s-40 17.9-40 40v38.9c-135.7 19.4-240 136-240 277.1v340h-24c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h216c0 61.8 50.2 112 112 112s112-50.2 112-112h216c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM512 888c-26.5 0-48-21.5-48-48h96c0 26.5-21.5 48-48 48zM304 768V428c0-55.6 21.6-107.8 60.9-147.1S456.4 220 512 220c55.6 0 107.8 21.6 147.1 60.9S720 372.4 720 428v340H304z\" } }] }, \"name\": \"bell\", \"theme\": \"outlined\" };\nexport default BellOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport BellOutlinedSvg from \"@ant-design/icons-svg/es/asn/BellOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar BellOutlined = function BellOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: BellOutlinedSvg\n  }));\n};\n\nBellOutlined.displayName = 'BellOutlined';\nexport default React.forwardRef(BellOutlined);","import React, {Component} from 'react';\nimport {Button, Form, Row, Tabs, Card} from \"antd\";\nimport {SaveOutlined, FileTextOutlined} from \"@ant-design/icons\";\nimport * as _ from 'lodash';\nimport CKEditor from \"ckeditor4-react\";\n\nconst {TabPane} = Tabs;\n\nclass ContentSetting extends Component {\n\n    formRef = React.createRef();\n\n    handleData = () => {\n        const {listContentSetting} = this.props;\n        let data = {};\n        listContentSetting\n        && listContentSetting.settings.map(value => {\n            return data[value.key] = value.value;\n        });\n\n        return data;\n    };\n\n    onFinish = (values) => {\n\n\n        const {editContentSetting} = this.props;\n\n        let dataToPost = Object.keys(values).map(key => ({\n            key: key,\n            value: values[key]\n        }));\n\n        editContentSetting(dataToPost);\n\n\n    };\n\n    render() {\n\n        const data = this.handleData();\n        const {editContentLoading} = this.props;\n\n\n        return (\n            !_.isEmpty(data) && (\n                <Form\n                    ref={this.formRef}\n                    layout=\"vertical\"\n                    onFinish={this.onFinish}\n                    initialValues={{\n                        PENDING_DESIGN_6_HOURS: _.get(data, 'PENDING_DESIGN_6_HOURS', ''),\n                        PENDING_DESIGN_24_HOURS: _.get(data, 'PENDING_DESIGN_24_HOURS', ''),\n                        PENDING_DESIGN_48_HOURS: _.get(data, 'PENDING_DESIGN_48_HOURS', ''),\n                        PENDING_DESIGN_72_HOURS: _.get(data, 'PENDING_DESIGN_72_HOURS', ''),\n                        ACTION_REQUIRED_6_HOURS: _.get(data, 'ACTION_REQUIRED_6_HOURS', ''),\n                        ACTION_REQUIRED_24_HOURS: _.get(data, 'ACTION_REQUIRED_24_HOURS', ''),\n                        ACTION_REQUIRED_48_HOURS: _.get(data, 'ACTION_REQUIRED_48_HOURS', ''),\n                        ACTION_REQUIRED_72_HOURS: _.get(data, 'ACTION_REQUIRED_72_HOURS', ''),\n                        NEED_PAY_6_HOURS: _.get(data, 'NEED_PAY_6_HOURS', ''),\n                        NEED_PAY_24_HOURS: _.get(data, 'NEED_PAY_24_HOURS', ''),\n                        NEED_PAY_48_HOURS: _.get(data, 'NEED_PAY_48_HOURS', ''),\n                        NEED_PAY_72_HOURS: _.get(data, 'NEED_PAY_72_HOURS', ''),\n                    }}\n                >\n\n                    <Tabs defaultActiveKey=\"pendingDesign\" tabPosition='left'>\n                        <TabPane key={`pendingDesign`} tab='Pending Design'>\n\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currentValues) => prevValues.PENDING_DESIGN_24_HOURS !== currentValues.PENDING_DESIGN_24_HOURS}\n                            >\n                                {({getFieldValue}) => {\n                                    return <Form.Item\n                                        name=\"PENDING_DESIGN_6_HOURS\"\n                                        label=\"After 6 hours\"\n                                        style={{fontWeight:'bold'}}\n                                        // rules={[{required: true, message: 'Please enter amount'}]}\n                                    >\n                                        <CKEditor\n                                            name=\"PENDING_DESIGN_6_HOURS\"\n                                            data={getFieldValue('PENDING_DESIGN_6_HOURS')}\n                                            // onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                            onChange={(evt) => this.formRef.current.setFieldsValue({'PENDING_DESIGN_6_HOURS': evt.editor.getData()})}\n                                            config={{\n                                                extraPlugins: 'justify',\n                                            }}\n                                        />\n                                    </Form.Item>\n                                }}\n                            </Form.Item>\n                            <br/>\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currentValues) => prevValues.PENDING_DESIGN_6_HOURS !== currentValues.PENDING_DESIGN_6_HOURS}\n                            >\n                                {({getFieldValue}) => {\n                                    return <Form.Item\n                                        name=\"PENDING_DESIGN_24_HOURS\"\n                                        label=\"After 24 hours\"\n                                        style={{fontWeight:'bold'}}\n                                        // rules={[{required: true, message: 'Please enter amount'}]}\n                                    >\n                                        <CKEditor\n                                            name=\"PENDING_DESIGN_24_HOURS\"\n                                            data={getFieldValue('PENDING_DESIGN_24_HOURS')}\n                                            onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                            onChange={(evt) => this.formRef.current.setFieldsValue({'PENDING_DESIGN_24_HOURS': evt.editor.getData()})}\n                                            config={{\n                                                extraPlugins: 'justify',\n                                            }}\n                                        />\n                                    </Form.Item>\n                                }}\n                            </Form.Item>\n                            <br/>\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currentValues) => prevValues.PENDING_DESIGN_72_HOURS !== currentValues.PENDING_DESIGN_72_HOURS}\n                            >\n                                {({getFieldValue}) => {\n                                    return <Form.Item\n                                        name=\"PENDING_DESIGN_48_HOURS\"\n                                        label=\"After 48 hours\"\n                                        style={{fontWeight:'bold'}}\n                                        // rules={[{required: true, message: 'Please enter amount'}]}\n                                    >\n                                        <CKEditor\n                                            name=\"PENDING_DESIGN_48_HOURS\"\n                                            data={getFieldValue('PENDING_DESIGN_48_HOURS')}\n                                            onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                            onChange={(evt) => this.formRef.current.setFieldsValue({'PENDING_DESIGN_48_HOURS': evt.editor.getData()})}\n                                            config={{\n                                                extraPlugins: 'justify',\n                                            }}\n                                        />\n                                    </Form.Item>\n                                }}\n                            </Form.Item>\n                            <br/>\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currentValues) => prevValues.PENDING_DESIGN_48_HOURS !== currentValues.PENDING_DESIGN_48_HOURS}\n                            >\n                                {({getFieldValue}) => {\n                                    return <Form.Item\n                                        name=\"PENDING_DESIGN_72_HOURS\"\n                                        label=\"After 72 hours\"\n                                        style={{fontWeight:'bold'}}\n                                        // rules={[{required: true, message: 'Please enter amount'}]}\n                                    >\n                                        <CKEditor\n                                            name=\"PENDING_DESIGN_72_HOURS\"\n                                            data={getFieldValue('PENDING_DESIGN_72_HOURS')}\n                                            onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                            onChange={(evt) => this.formRef.current.setFieldsValue({'PENDING_DESIGN_72_HOURS': evt.editor.getData()})}\n                                            config={{\n                                                extraPlugins: 'justify',\n                                            }}\n                                        />\n                                    </Form.Item>\n                                }}\n                            </Form.Item>\n\n                        </TabPane>\n                        <TabPane key={`actionRequired`} tab='Action Required'>\n\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currentValues) => prevValues.ACTION_REQUIRED_24_HOURS !== currentValues.ACTION_REQUIRED_24_HOURS}\n                            >\n                                {({getFieldValue}) => {\n                                    return <Form.Item\n                                        name=\"ACTION_REQUIRED_6_HOURS\"\n                                        label=\"After 6 hours\"\n                                        style={{fontWeight:'bold'}}\n                                        // rules={[{required: true, message: 'Please enter amount'}]}\n                                    >\n                                        <CKEditor\n                                            name=\"ACTION_REQUIRED_6_HOURS\"\n                                            data={getFieldValue('ACTION_REQUIRED_6_HOURS')}\n                                            // onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                            onChange={(evt) => this.formRef.current.setFieldsValue({'ACTION_REQUIRED_6_HOURS': evt.editor.getData()})}\n                                            config={{\n                                                extraPlugins: 'justify',\n                                            }}\n                                        />\n                                    </Form.Item>\n                                }}\n                            </Form.Item>\n                            <br/>\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currentValues) => prevValues.ACTION_REQUIRED_6_HOURS !== currentValues.ACTION_REQUIRED_6_HOURS}\n                            >\n                                {({getFieldValue}) => {\n                                    return <Form.Item\n                                        name=\"ACTION_REQUIRED_24_HOURS\"\n                                        label=\"After 24 hours\"\n                                        style={{fontWeight:'bold'}}\n                                        // rules={[{required: true, message: 'Please enter amount'}]}\n                                    >\n                                        <CKEditor\n                                            name=\"ACTION_REQUIRED_24_HOURS\"\n                                            data={getFieldValue('ACTION_REQUIRED_24_HOURS')}\n                                            onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                            onChange={(evt) => this.formRef.current.setFieldsValue({'ACTION_REQUIRED_24_HOURS': evt.editor.getData()})}\n                                            config={{\n                                                extraPlugins: 'justify',\n                                            }}\n                                        />\n                                    </Form.Item>\n                                }}\n                            </Form.Item>\n                            <br/>\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currentValues) => prevValues.ACTION_REQUIRED_72_HOURS !== currentValues.ACTION_REQUIRED_72_HOURS}\n                            >\n                                {({getFieldValue}) => {\n                                    return <Form.Item\n                                        name=\"ACTION_REQUIRED_48_HOURS\"\n                                        label=\"After 48 hours\"\n                                        style={{fontWeight:'bold'}}\n                                        // rules={[{required: true, message: 'Please enter amount'}]}\n                                    >\n                                        <CKEditor\n                                            name=\"ACTION_REQUIRED_48_HOURS\"\n                                            data={getFieldValue('ACTION_REQUIRED_48_HOURS')}\n                                            onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                            onChange={(evt) => this.formRef.current.setFieldsValue({'ACTION_REQUIRED_48_HOURS': evt.editor.getData()})}\n                                            config={{\n                                                extraPlugins: 'justify',\n                                            }}\n                                        />\n                                    </Form.Item>\n                                }}\n                            </Form.Item>\n                            <br/>\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currentValues) => prevValues.ACTION_REQUIRED_48_HOURS !== currentValues.ACTION_REQUIRED_48_HOURS}\n                            >\n                                {({getFieldValue}) => {\n                                    return <Form.Item\n                                        name=\"ACTION_REQUIRED_72_HOURS\"\n                                        label=\"After 72 hours\"\n                                        style={{fontWeight:'bold'}}\n                                        // rules={[{required: true, message: 'Please enter amount'}]}\n                                    >\n                                        <CKEditor\n                                            name=\"ACTION_REQUIRED_72_HOURS\"\n                                            data={getFieldValue('ACTION_REQUIRED_72_HOURS')}\n                                            onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                            onChange={(evt) => this.formRef.current.setFieldsValue({'ACTION_REQUIRED_72_HOURS': evt.editor.getData()})}\n                                            config={{\n                                                extraPlugins: 'justify',\n                                            }}\n                                        />\n                                    </Form.Item>\n                                }}\n                            </Form.Item>\n\n                        </TabPane>\n                        <TabPane key={`NeedPay`} tab='Need Pay'>\n\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currentValues) => prevValues.NEED_PAY_24_HOURS !== currentValues.NEED_PAY_24_HOURS}\n                            >\n                                {({getFieldValue}) => {\n                                    return <Form.Item\n                                        name=\"NEED_PAY_6_HOURS\"\n                                        label=\"After 6 hours\"\n                                        style={{fontWeight:'bold'}}\n                                        // rules={[{required: true, message: 'Please enter amount'}]}\n                                    >\n                                        <CKEditor\n                                            name=\"NEED_PAY_6_HOURS\"\n                                            data={getFieldValue('NEED_PAY_6_HOURS')}\n                                            onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                            onChange={(evt) => this.formRef.current.setFieldsValue({'NEED_PAY_6_HOURS': evt.editor.getData()})}\n                                            config={{\n                                                extraPlugins: 'justify',\n                                            }}\n                                        />\n                                    </Form.Item>\n                                }}\n                            </Form.Item>\n                            <br/>\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currentValues) => prevValues.NEED_PAY_6_HOURS !== currentValues.NEED_PAY_6_HOURS}\n                            >\n                                {({getFieldValue}) => {\n                                    return <Form.Item\n                                        name=\"NEED_PAY_24_HOURS\"\n                                        label=\"After 24 hours\"\n                                        style={{fontWeight:'bold'}}\n                                        // rules={[{required: true, message: 'Please enter amount'}]}\n                                    >\n                                        <CKEditor\n                                            name=\"NEED_PAY_24_HOURS\"\n                                            data={getFieldValue('NEED_PAY_24_HOURS')}\n                                            onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                            onChange={(evt) => this.formRef.current.setFieldsValue({'NEED_PAY_24_HOURS': evt.editor.getData()})}\n                                            config={{\n                                                extraPlugins: 'justify',\n                                            }}\n                                        />\n                                    </Form.Item>\n                                }}\n                            </Form.Item>\n                            <br/>\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currentValues) => prevValues.NEED_PAY_72_HOURS !== currentValues.NEED_PAY_72_HOURS}\n                            >\n                                {({getFieldValue}) => {\n                                    return <Form.Item\n                                        name=\"NEED_PAY_48_HOURS\"\n                                        label=\"After 48 hours\"\n                                        style={{fontWeight:'bold'}}\n                                        // rules={[{required: true, message: 'Please enter amount'}]}\n                                    >\n                                        <CKEditor\n                                            name=\"NEED_PAY_48_HOURS\"\n                                            data={getFieldValue('NEED_PAY_48_HOURS')}\n                                            onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                            onChange={(evt) => this.formRef.current.setFieldsValue({'NEED_PAY_48_HOURS': evt.editor.getData()})}\n                                            config={{\n                                                extraPlugins: 'justify',\n                                            }}\n                                        />\n                                    </Form.Item>\n                                }}\n                            </Form.Item>\n                            <br/>\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currentValues) => prevValues.NEED_PAY_48_HOURS !== currentValues.NEED_PAY_48_HOURS}\n                            >\n                                {({getFieldValue}) => {\n                                    return <Form.Item\n                                        name=\"NEED_PAY_72_HOURS\"\n                                        label=\"After 72 hours\"\n                                        style={{fontWeight:'bold'}}\n                                        // rules={[{required: true, message: 'Please enter amount'}]}\n                                    >\n                                        <CKEditor\n                                            name=\"NEED_PAY_72_HOURS\"\n                                            data={getFieldValue('NEED_PAY_72_HOURS')}\n                                            onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                            onChange={(evt) => this.formRef.current.setFieldsValue({'NEED_PAY_72_HOURS': evt.editor.getData()})}\n                                            config={{\n                                                extraPlugins: 'justify',\n                                            }}\n                                        />\n                                    </Form.Item>\n                                }}\n                            </Form.Item>\n\n                        </TabPane>\n                    </Tabs>\n                    <br/>\n                    <Row style={{marginLeft: 180}}>\n                        <Form.Item style={{width: '100%'}}>\n                            <Button\n                                icon={<SaveOutlined/>}\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                block\n                                loading={editContentLoading}\n                            >\n                                Save\n                            </Button>\n                        </Form.Item>\n                    </Row>\n                </Form>\n            )\n        )\n\n    }\n\n}\n\nContentSetting.propTypes = {};\n\nexport default ContentSetting;\n","import React, {Component} from 'react';\nimport {Button, Form} from \"antd\";\nimport {SaveOutlined} from \"@ant-design/icons\";\nimport * as _ from 'lodash';\nimport CKEditor from \"ckeditor4-react\";\n\nclass ContentSetting extends Component {\n\n    form = React.createRef();\n\n    handleData = () => {\n        const {listContentSetting} = this.props;\n        let data = {};\n        listContentSetting\n        && listContentSetting.settings.map(value => {\n            return data[value.key] = value.value;\n        });\n\n        return data;\n    };\n\n    onFinish = (values) => {\n\n\n        const {editContentSetting} = this.props;\n\n        let dataToPost = Object.keys(values).map(key => ({\n            key: key,\n            value: values[key]\n        }));\n\n        editContentSetting(dataToPost);\n\n    };\n\n    render() {\n\n        const data = this.handleData();\n        const {editContentLoading} = this.props;\n\n        return (\n\n            !_.isEmpty(data) && (\n                <Form\n                    ref={this.form}\n                    layout=\"vertical\"\n                    onFinish={this.onFinish}\n                    initialValues={{\n                        SELLER_NEXT_LEVEL: _.get(data, 'SELLER_NEXT_LEVEL', ''),\n                        PENDING_DESIGN_6_HOURS: _.get(data, 'PENDING_DESIGN_6_HOURS', ''),\n                    }}\n                >\n                    <Form.Item\n                        noStyle\n                        shouldUpdate={(prevValues, currentValues) => prevValues.PENDING_DESIGN_6_HOURS !== currentValues.PENDING_DESIGN_6_HOURS}\n                    >\n                        {({getFieldValue}) => {\n                            return <Form.Item\n                                name=\"SELLER_NEXT_LEVEL\"\n                                label=\"Content\"\n                                style={{fontWeight: 'bold'}}\n                                // rules={[{required: true, message: 'Please enter amount'}]}\n                            >\n                                <CKEditor\n                                    name=\"SELLER_NEXT_LEVEL\"\n                                    data={getFieldValue('SELLER_NEXT_LEVEL')}\n                                    onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                    onChange={(evt) => this.form.current.setFieldsValue({'SELLER_NEXT_LEVEL': evt.editor.getData()})}\n                                    config={{\n                                        extraPlugins: 'justify',\n                                    }}\n                                />\n                            </Form.Item>\n                        }}\n                    </Form.Item>\n                    <br/>\n                    <Form.Item>\n                        <Button\n                            icon={<SaveOutlined/>}\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            block\n                            loading={editContentLoading}\n                        >\n                            Save\n                        </Button>\n                    </Form.Item>\n\n                </Form>\n            )\n        )\n    }\n\n}\n\nContentSetting.propTypes = {};\n\nexport default ContentSetting;\n","import React, {Component} from 'react';\nimport {\n    Card,\n    message,\n    Tabs,\n} from 'antd';\nimport {\n    FileTextOutlined,\n    UserOutlined,\n    BellOutlined,\n} from \"@ant-design/icons\";\nimport CatchError from '../../core/util/CatchError';\nimport ContentSetting from \"./ContentSetting\";\nimport LevelContentSetting from \"./LevelContentSetting\";\n\nconst {TabPane} = Tabs;\n\n\nclass Content extends Component {\n\n    state = {};\n\n    componentDidMount() {\n        this.props.fetchAllContentSetting();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n\n        const {\n            editContentSuccess,\n            editContentError,\n        } = this.props;\n\n        if (\n            nextProps.editContentSuccess === true\n            && nextProps.editContentSuccess !== editContentSuccess\n        ) {\n            message.success('Success!');\n        }\n\n        if (\n            nextProps.editContentError && nextProps.editContentError !== editContentError\n        ) {\n            message.error({content: CatchError[nextProps.editContentError] || nextProps.editContentError});\n        }\n\n    }\n\n    callback = (key) => {\n        // console.log(key);\n    };\n\n\n    render() {\n\n        const {\n            editContentLoading,\n            listContentSetting,\n            editContentSetting\n        } = this.props;\n\n        return (\n            <Card\n                title={<span><FileTextOutlined style={{marginRight: '5px'}}/> Your Content</span>}\n                headStyle={{color: 'rgba(0, 0, 0, 0.45)'}}\n            >\n                <Tabs defaultActiveKey=\"1\" onChange={this.callback} animated={false}>\n                    <TabPane tab={<span style={{fontSize: 15}}><UserOutlined/>Order status content</span>} key=\"1\">\n                        <br/>\n                        <ContentSetting\n                            editContentLoading={editContentLoading}\n                            listContentSetting={listContentSetting}\n                            editContentSetting={editContentSetting}\n                        />\n                    </TabPane>\n                    <TabPane tab={<span style={{fontSize: 15}}><BellOutlined/>Seller next level content</span>} key=\"2\">\n                        <br/>\n                        <LevelContentSetting\n                            editContentLoading={editContentLoading}\n                            listContentSetting={listContentSetting}\n                            editContentSetting={editContentSetting}\n                        />\n                    </TabPane>\n                </Tabs>\n            </Card>\n        );\n    }\n}\n\nexport default Content;\n","import {connect} from 'react-redux';\n\nimport {ContentSettingActions} from '../../redux/actions';\nimport Content from '../../views/ContentSetting/index';\n\n\nconst mapStateToProps = (state) => ({\n    listContentSetting: state.toJS().contentSetting.listContentSetting,\n    editContentLoading: state.toJS().contentSetting.editContentLoading,\n    editContentSuccess: state.toJS().contentSetting.editContentSuccess,\n    editContentError: state.toJS().contentSetting.editContentError,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchAllContentSetting: () => dispatch(ContentSettingActions.fetchAllContentSetting()),\n    editContentSetting: (params) => dispatch(ContentSettingActions.editContentSetting(params)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Content);\n"],"sourceRoot":""}