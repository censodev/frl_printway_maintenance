{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","views/Suppliers/suppliers.module.less","../node_modules/@ant-design/icons-svg/es/asn/HistoryOutlined.js","../node_modules/@ant-design/icons/es/icons/HistoryOutlined.js","views/Suppliers/Suppliers.js","containers/Suppliers/SuppliersContainer.js"],"names":["DeleteOutlined","props","ref","React","AntdIcon","Object","assign","icon","DeleteOutlinedSvg","displayName","module","exports","HistoryOutlined","HistoryOutlinedSvg","Search","key","Suppliers","state","pageSize","currentPage","keyword","sortedInfo","order","columnKey","handleDelete","id","message","loading","content","deleteSite","debounceSearch","_","e","setState","trim","length","onSubmit","onChangeKeyWord","target","value","onShowSizeChange","current","checkParam","dataParams","sort","page","size","handleTableChange","pagination","filters","sorter","fetchAllSuppliers","onSearch","nextProps","this","deleteSuccess","deleteError","success","duration","onClose","window","location","reload","error","CatchError","listSuppliers","suppliers","totalElements","title","style","marginRight","headStyle","color","Group","gutter","md","xs","allowClear","placeholder","onChange","width","rowKey","record","columns","dataIndex","render","text","status","okText","cancelText","onConfirm","className","classnames","cls","dataSource","total","showSizeChanger","showLessItems","showQuickJumper","showTotal","Component","connect","toJS","createLoading","createSuccess","createError","deleteLoading","dispatch","params","SuppliersActions","deleteSupplier"],"mappings":"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","file":"static/js/30.5d5ff8b9.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\n\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default React.forwardRef(DeleteOutlined);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"text--3oneS\",\"icon\":\"icon--3snQG\"};","// This icon file is generated automatically.\nvar HistoryOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M536.1 273H488c-4.4 0-8 3.6-8 8v275.3c0 2.6 1.2 5 3.3 6.5l165.3 120.7c3.6 2.6 8.6 1.9 11.2-1.7l28.6-39c2.7-3.7 1.9-8.7-1.7-11.2L544.1 528.5V281c0-4.4-3.6-8-8-8zm219.8 75.2l156.8 38.3c5 1.2 9.9-2.6 9.9-7.7l.8-161.5c0-6.7-7.7-10.5-12.9-6.3L752.9 334.1a8 8 0 003 14.1zm167.7 301.1l-56.7-19.5a8 8 0 00-10.1 4.8c-1.9 5.1-3.9 10.1-6 15.1-17.8 42.1-43.3 80-75.9 112.5a353 353 0 01-112.5 75.9 352.18 352.18 0 01-137.7 27.8c-47.8 0-94.1-9.3-137.7-27.8a353 353 0 01-112.5-75.9c-32.5-32.5-58-70.4-75.9-112.5A353.44 353.44 0 01171 512c0-47.8 9.3-94.2 27.8-137.8 17.8-42.1 43.3-80 75.9-112.5a353 353 0 01112.5-75.9C430.6 167.3 477 158 524.8 158s94.1 9.3 137.7 27.8A353 353 0 01775 261.7c10.2 10.3 19.8 21 28.6 32.3l59.8-46.8C784.7 146.6 662.2 81.9 524.6 82 285 82.1 92.6 276.7 95 516.4 97.4 751.9 288.9 942 524.8 942c185.5 0 343.5-117.6 403.7-282.3 1.5-4.2-.7-8.9-4.9-10.4z\" } }] }, \"name\": \"history\", \"theme\": \"outlined\" };\nexport default HistoryOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport HistoryOutlinedSvg from \"@ant-design/icons-svg/es/asn/HistoryOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar HistoryOutlined = function HistoryOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: HistoryOutlinedSvg\n  }));\n};\n\nHistoryOutlined.displayName = 'HistoryOutlined';\nexport default React.forwardRef(HistoryOutlined);","import React, {Component} from 'react';\nimport {Tooltip, Card, Table, Button, Space, Popconfirm, message, Input, Row, Col, Badge} from 'antd';\nimport {\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    HistoryOutlined\n} from \"@ant-design/icons\";\nimport {isMobile} from 'react-device-detect';\nimport classnames from 'classnames';\nimport cls from './suppliers.module.less';\n// import EditSitesDrawer from \"../../components/Drawer/EditSitesDrawer/EditSitesDrawer\";\nimport CatchError from '../../core/util/CatchError';\nimport * as _ from \"lodash\";\n\nconst {Search} = Input;\nconst key = 'deleteTransaction';\n\nclass Suppliers extends Component {\n\n    state = {\n        // sitesData: null,\n        // openEditSitesDrawer: false,\n        pageSize: 10,\n        currentPage: 0,\n        keyword: '',\n        sortedInfo: {\n            order: 'descend',\n            columnKey: 'createdDate',\n        },\n    };\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n\n        const {\n            deleteSuccess,\n            deleteError\n        } = this.props;\n\n        if (\n            nextProps.deleteSuccess === true\n            && nextProps.deleteSuccess !== deleteSuccess\n        ) {\n            message.success({\n                content: 'Success!', key, duration: 1.5, onClose: () => {\n                    window.location.reload()\n                }\n            });\n        }\n\n        if (\n            nextProps.deleteError && nextProps.deleteError !== deleteError\n        ) {\n            message.error({content: CatchError[nextProps.deleteError] || nextProps.deleteError, key, duration: 2});\n        }\n\n    }\n\n\n    componentDidMount() {\n        this.props.fetchAllSuppliers(this.checkParam());\n    }\n\n    // showEditSitesDrawer = (data) => {\n    //     this.setState({\n    //         openEditSitesDrawer: true,\n    //         levelsData: data\n    //     });\n    // };\n    //\n    // onCloseDrawer = () => {\n    //     this.setState({\n    //         levelsData: null,\n    //         openEditSitesDrawer: false,\n    //     });\n    // };\n\n\n    handleDelete = (id) => {\n        if (id) {\n            message.loading({content: 'Loading...', key});\n            this.props.deleteSite(id);\n        }\n    };\n\n    debounceSearch = _.debounce(e => {\n        this.setState({\n            keyword: e.trim()\n        }, () => {\n            if (e.length !== 1) {\n                this.onSubmit();\n            }\n        })\n    }, 300);\n\n    onChangeKeyWord = (e) => {\n        this.debounceSearch(e.target.value);\n    };\n\n    onShowSizeChange = (current, pageSize) => {\n        this.setState({\n            pageSize: pageSize\n        })\n    };\n\n    checkParam = () => {\n        const {\n            currentPage,\n            pageSize,\n            sortedInfo,\n            keyword\n        } = this.state;\n\n        const dataParams = {};\n\n        // if (status) {\n        //     dataParams.activated = status === 'active';\n        // }\n\n\n        if (sortedInfo && sortedInfo.order && sortedInfo.columnKey) {\n            dataParams.sort = `${sortedInfo.columnKey},${sortedInfo.order}`\n        }\n\n        dataParams.keyword = keyword;\n        dataParams.page = currentPage;\n        dataParams.size = pageSize;\n\n        return dataParams;\n    };\n\n\n    handleTableChange = (pagination, filters, sorter) => {\n\n        this.setState({\n                currentPage: pagination.current - 1\n            }, () =>\n                this.props.fetchAllSuppliers(this.checkParam())\n        );\n    };\n\n    onSearch = (value) => {\n        if (value) {\n            this.onSubmit();\n        }\n    };\n\n    onSubmit = () => {\n\n        this.setState({\n            currentPage: 0\n        }, () => {\n            this.props.fetchAllSuppliers(this.checkParam());\n        });\n\n    };\n\n    render() {\n\n        const {\n            // levelsData,\n            // openEditSitesDrawer,\n            pageSize,\n            currentPage,\n        } = this.state;\n\n        const {\n            listSuppliers,\n            // editSellerLevel,\n            // createSellerLevel,\n            // editLoading,\n            // editSuccess,\n            // editError,\n            // createLoading,\n            // createError,\n            // createSuccess\n        } = this.props;\n\n        const {suppliers, loading, totalElements} = listSuppliers;\n\n        return (\n\n            <>\n                <Card\n                    title={<span><HistoryOutlined style={{marginRight: '5px'}}/> SUPPLIERS</span>}\n                    headStyle={{color: 'rgba(0, 0, 0, 0.45)'}}\n                    // extra={\n                    //     <Button\n                    //         type=\"primary\"\n                    //         icon={<PlusOutlined/>}\n                    //         size={isMobile ? 'small' : 'middle'}\n                    //         onClick={() => this.setState({openEditSitesDrawer: true})}\n                    //     >\n                    //         Add new\n                    //     </Button>\n                    // }\n                >\n                    <Input.Group>\n                        <Row gutter={24}>\n                            <Col md={8} xs={24}>\n                                <Search\n                                    allowClear\n                                    placeholder=\"Search...\"\n                                    onSearch={this.onSearch}\n                                    onChange={this.onChangeKeyWord}\n                                    style={{width: '100%'}}\n                                />\n                            </Col>\n                            {/*<Col md={3} xs={24}>*/}\n                            {/*    <Button onClick={this.onSortByDate} style={{width: '100%'}}*/}\n                            {/*            icon={sortedInfo.order === 'desc' ? <SortAscendingOutlined/> :*/}\n                            {/*                <SortDescendingOutlined/>}>Sort Date</Button>*/}\n                            {/*</Col>*/}\n                            {/*<Col md={4} xs={24}>*/}\n                            {/*    <Select*/}\n                            {/*        showSearch*/}\n                            {/*        allowClear*/}\n                            {/*        style={{width: '100%'}}*/}\n                            {/*        placeholder=\"Filter by status\"*/}\n                            {/*        onChange={this.onChangeStatus}*/}\n                            {/*        value={status}*/}\n                            {/*    >*/}\n                            {/*        <Option value=\"active\">Active</Option>*/}\n                            {/*        <Option value=\"deactivate\">Deactivate</Option>*/}\n                            {/*    </Select>*/}\n                            {/*</Col>*/}\n                        </Row>\n                    </Input.Group>\n                    <br/>\n                    <Table\n                        rowKey={record => record.id}\n                        columns={[\n                            {\n                                title: 'Name',\n                                dataIndex: 'name',\n                                key: 'name',\n                            },\n                            // {\n                            //     title: 'Url',\n                            //     dataIndex: 'url',\n                            //     key: 'url',\n                            // },\n                            // {\n                            //     title: 'Platform',\n                            //     dataIndex: 'siteType',\n                            //     key: 'siteType',\n                            // },\n                            // {\n                            //     title: 'User',\n                            //     dataIndex: 'user',\n                            //     key: 'user',\n                            // },\n                            // {\n                            //     title: 'Connected date',\n                            //     dataIndex: 'createdDate',\n                            //     key: 'createdDate',\n                            //     render: text => new Date(text).toLocaleString(),\n                            // },\n                            {\n                                title: 'Status',\n                                dataIndex: 'activated',\n                                key: 'activated',\n                                render: text => {\n                                    return <Badge\n                                        status={text ? 'success' : 'warning'}\n                                        text={text ? 'Active' : 'Deactivate'}\n                                    />\n                                },\n                            },\n                            {\n                                title: 'Actions',\n                                key: 'action',\n                                render: (text, record) => (\n                                    <Space size=\"middle\">\n                                        {/*<Tooltip title='Edit'>*/}\n                                        {/*    <EditOutlined className={classnames('blue', cls.icon)}*/}\n                                        {/*                  onClick={() => {*/}\n                                        {/*                      this.showEditSitesDrawer(record);*/}\n                                        {/*                  }}/>*/}\n                                        {/*</Tooltip>*/}\n\n                                        <Popconfirm\n                                            title=\"Are you sure to delete？\"\n                                            okText=\"Yes\" cancelText=\"No\"\n                                            onConfirm={() => {\n                                                this.handleDelete(record.id)\n                                            }}\n                                        >\n                                            <DeleteOutlined className={classnames('orange', cls.icon)}/>\n                                        </Popconfirm>\n\n                                    </Space>\n                                )\n                            },\n                        ]}\n                        dataSource={suppliers}\n                        pagination={{\n                            current: currentPage + 1,\n                            pageSize: pageSize,\n                            total: totalElements,\n                            showSizeChanger: true,\n                            onShowSizeChange: this.onShowSizeChange,\n                            showLessItems: true,\n                            showQuickJumper: true,\n                            showTotal: (total) => `Total ${total} suppliers`\n                        }}\n                        loading={loading}\n                        onChange={this.handleTableChange}\n                    />\n                </Card>\n\n                {/*<EditSitesDrawer*/}\n                {/*    visible={openEditSitesDrawer}*/}\n                {/*    onClose={this.onCloseDrawer}*/}\n                {/*    editSellerLevel={editSellerLevel}*/}\n                {/*    createSellerLevel={createSellerLevel}*/}\n                {/*    data={levelsData}*/}\n                {/*    editLoading={editLoading}*/}\n                {/*    editSuccess={editSuccess}*/}\n                {/*    editError={editError}*/}\n                {/*    createError={createError}*/}\n                {/*    createLoading={createLoading}*/}\n                {/*    createSuccess={createSuccess}*/}\n                {/*/>*/}\n\n            </>\n        );\n    }\n}\n\nexport default Suppliers;\n","import {connect} from 'react-redux';\n\nimport {SuppliersActions} from '../../redux/actions';\nimport Suppliers from \"../../views/Suppliers/Suppliers\";\n\nconst mapStateToProps = (state) => ({\n    listSuppliers: state.toJS().suppliers.listSuppliers,\n    createLoading: state.toJS().suppliers.createLoading,\n    createSuccess: state.toJS().suppliers.createSuccess,\n    createError: state.toJS().suppliers.createError,\n    // editLoading: state.toJS().suppliers.editLoading,\n    // editSuccess: state.toJS().suppliers.editSuccess,\n    // editError: state.toJS().suppliers.editError,\n    deleteLoading: state.toJS().suppliers.deleteLoading,\n    deleteSuccess: state.toJS().suppliers.deleteSuccess,\n    deleteError: state.toJS().suppliers.deleteError,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchAllSuppliers: (params) => dispatch(SuppliersActions.fetchAllSuppliers(params)),\n    // createSite: (params) => dispatch(SiteActions.createSite(params)),\n    // editSite: (params) => dispatch(SiteActions.editSite(params)),\n    deleteSupplier: (id) => dispatch(SuppliersActions.deleteSupplier(id)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Suppliers);\n"],"sourceRoot":""}